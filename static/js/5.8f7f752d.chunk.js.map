{"version":3,"sources":["components/Main/Profile/ProfileStatus.js","components/Main/Profile/PageInfoWrap.js","components/Main/Profile/NewPostBlock.js","components/Main/Profile/ExistingPostsBlock.js","components/Main/Profile/Profile.js","components/Main/Profile/ProfileContainer.js","utilities/validators/validators.js","components/common/FormControls/FormControls.js","components/Main/Profile/Profile.module.scss","assets/image/les_tuman_derevia.jpg"],"names":["React","memo","status","updateUserStatus","isMyProfile","useState","editMode","setEditMode","className","styles","initialValues","onSubmit","form","getState","render","handleSubmit","onBlur","autoFocus","component","name","maxLength","parse","value","onDoubleClick","undefined","title","myStatus","enterStatus","Contacts","contacts","pageEditMode","itemExist","items","Object","entries","map","contact","key","contactsItem","contactsBlock","contactsTitle","AboutMe","aboutMe","lookingForAJob","lookingForAJobDescription","aboutMeBlock","Textarea","placeholder","validate","required","pageInfoRow","type","PersonalInfoWrap","setPageEditMode","personalInfoWrap","topBorder","onClick","editModeButton","personalInfo","saveButton","cancelButton","PageInfoWrap","profile","defaultAvatar","changeMyPhoto","photos","fullName","pageWrap","avatar","src","large","alt","onChange","e","target","files","length","pageInfoWrap","pageName","PageInfoWrapWithEditMode","props","userId","payload","changeUserData","values","addPost","newPostInput","setTimeout","restart","newPostBlock","Input","fullValidation","buttonWrap","existingPostsBlock","posts","el","id","post","textPost","likes","amountLikes","reverse","topImage","existingPosts","isAuth","contentBlockWrapper","contentBlock","postsBlock","mapDispatchToProps","getAuthUserData","getProfile","compose","connect","state","profilePage","auth","authUserId","withRouter","match","params","userIdInAddressBar","setIsMyProfile","useEffect","Preloader","to","message","min","max","mess","validators","reduce","error","validator","composeValidators","minLength","FormControl","input","meta","Element","element","touched","module","exports"],"mappings":"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","file":"static/js/5.8f7f752d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './Profile.module.scss';\r\nimport { Form, Field } from 'react-final-form';\r\n\r\nconst ProfileStatus = ({ status, updateUserStatus, isMyProfile }) => {\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{editMode ? (\r\n\t\t\t\t<div className={styles.status}>\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tinitialValues={{\r\n\t\t\t\t\t\t\tstatus: status,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonSubmit={({ status }, form) => {\r\n\t\t\t\t\t\t\tif (status !== form.getState().initialValues.status) {\r\n\t\t\t\t\t\t\t\tupdateUserStatus(status);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsetEditMode(false);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\trender={({ handleSubmit }) => (\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tonBlur={handleSubmit}\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tcomponent='input'\r\n\t\t\t\t\t\t\t\tname='status'\r\n\t\t\t\t\t\t\t\tmaxLength='300'\r\n\t\t\t\t\t\t\t\tparse={(value) => value}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t) : status || isMyProfile ? (\r\n\t\t\t\t<div className={styles.status}>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tonDoubleClick={isMyProfile ? activateEditMode : undefined}\r\n\t\t\t\t\t\ttitle={isMyProfile ? 'Double click to change your status' : ''}\r\n\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\tisMyProfile ? (status ? styles.myStatus : styles.enterStatus) : ''\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{status || 'Enter your status...'}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t) : undefined}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default React.memo(ProfileStatus);\r\n","import React, { useState } from 'react';\r\nimport styles from './Profile.module.scss';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { required } from '../../../utilities/validators/validators';\r\nimport { Textarea } from '../../common/FormControls/FormControls';\r\n\r\nconst Contacts = ({ contacts, pageEditMode }) => {\r\n\tlet itemExist = false;\r\n\tconst items = Object.entries(contacts).map((contact) => {\r\n\t\tif (contact[1] || pageEditMode) {\r\n\t\t\titemExist = true;\r\n\t\t\treturn (\r\n\t\t\t\t<div key={contact[0]} className={styles.contactsItem}>\r\n\t\t\t\t\t<span>{`${contact[0]}: `}</span>\r\n\t\t\t\t\t{pageEditMode ? (\r\n\t\t\t\t\t\t<Field component='input' name={contact[0]} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tcontact[1]\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn null\r\n\t\t}\r\n\t});\r\n\r\n\t\r\n\r\n\treturn itemExist || pageEditMode ? (\r\n\t\t<div className={styles.contactsBlock}>\r\n\t\t\t<div className={styles.contactsTitle}>Contacts:</div>\r\n\t\t\t{items}\r\n\t\t</div>\r\n\t) : (\r\n\t\t''\r\n\t);\r\n};\r\n\r\nconst AboutMe = ({\r\n\taboutMe,\r\n\tlookingForAJob,\r\n\tlookingForAJobDescription,\r\n\tpageEditMode,\r\n}) => {\r\n\treturn (\r\n\t\t<div className={styles.aboutMeBlock}>\r\n\t\t\t{pageEditMode ? (\r\n\t\t\t\t<Field\r\n\t\t\t\t\tcomponent={Textarea}\r\n\t\t\t\t\tname='aboutMe'\r\n\t\t\t\t\tplaceholder='About me'\r\n\t\t\t\t\tvalidate={required('Required field')}\r\n\t\t\t\t/>\r\n\t\t\t) : aboutMe ? (\r\n\t\t\t\t<div className={styles.pageInfoRow}>\r\n\t\t\t\t\t<span>About me:</span> {aboutMe}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\t\t\t<div className={styles.pageInfoRow}>\r\n\t\t\t\t<span>Looking for a job: </span>\r\n\t\t\t\t{pageEditMode ? (\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\tcomponent={'input'}\r\n\t\t\t\t\t\ttype={'checkbox'}\r\n\t\t\t\t\t\tname={'lookingForAJob'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t) : lookingForAJob ? (\r\n\t\t\t\t\t'Yes'\r\n\t\t\t\t) : (\r\n\t\t\t\t\t'No'\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t{pageEditMode ? (\r\n\t\t\t\t<Field\r\n\t\t\t\t\tcomponent={Textarea}\r\n\t\t\t\t\tname='lookingForAJobDescription'\r\n\t\t\t\t\tplaceholder='Description'\r\n\t\t\t\t\tvalidate={required('Required field')}\r\n\t\t\t\t/>\r\n\t\t\t) : lookingForAJobDescription ? (\r\n\t\t\t\t<div className={styles.pageInfoRow}>{lookingForAJobDescription}</div>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst PersonalInfoWrap = ({\r\n\tisMyProfile,\r\n\tsetPageEditMode,\r\n\tpageEditMode,\r\n\taboutMe,\r\n\tlookingForAJob,\r\n\tlookingForAJobDescription,\r\n\tcontacts,\r\n}) => {\r\n\treturn (\r\n\t\t<div className={styles.personalInfoWrap}>\r\n\t\t\t<div className={styles.topBorder}>\r\n\t\t\t\tPersonal information\r\n\t\t\t\t{isMyProfile && !pageEditMode && (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => setPageEditMode(true)}\r\n\t\t\t\t\t\tclassName={styles.editModeButton}\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tEdit\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.personalInfo}>\r\n\t\t\t\t<AboutMe\r\n\t\t\t\t\tpageEditMode={pageEditMode}\r\n\t\t\t\t\taboutMe={aboutMe}\r\n\t\t\t\t\tlookingForAJob={lookingForAJob}\r\n\t\t\t\t\tlookingForAJobDescription={lookingForAJobDescription}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Contacts\r\n\t\t\t\t\tpageEditMode={pageEditMode}\r\n\t\t\t\t\tcontacts={contacts}\r\n\t\t\t\t\tisMyProfile={isMyProfile}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t{pageEditMode && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<button type='submit' className={styles.saveButton}>\r\n\t\t\t\t\t\tSave\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => setPageEditMode(false)}\r\n\t\t\t\t\t\tclassName={styles.cancelButton}\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCancel\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// Общий блок информации о пользователе\r\nconst PageInfoWrap = ({\r\n\tprofile,\r\n\tdefaultAvatar,\r\n\tisMyProfile,\r\n\tstatus,\r\n\tupdateUserStatus,\r\n\tchangeMyPhoto,\r\n\tpageEditMode,\r\n\tsetPageEditMode,\r\n}) => {\r\n\t// Данные профиля\r\n\tconst {\r\n\t\tcontacts,\r\n\t\tphotos,\r\n\t\tfullName,\r\n\t\taboutMe,\r\n\t\tlookingForAJob,\r\n\t\tlookingForAJobDescription,\r\n\t} = profile;\r\n\r\n\t// Функция для отправки фото профиля на сервер\r\n\tconst onMyPhotoSelected = (e) => {\r\n\t\tif (e.target.files.length) {\r\n\t\t\tchangeMyPhoto(e.target.files[0]);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={styles.pageWrap}>\r\n\t\t\t<div className={styles.avatar}>\r\n\t\t\t\t<img src={photos.large || defaultAvatar} alt='avatar' />\r\n\t\t\t\t{isMyProfile && <input type='file' onChange={onMyPhotoSelected} />}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={styles.pageInfoWrap}>\r\n\t\t\t\t<div className={styles.pageName}>\r\n\t\t\t\t\t{pageEditMode ? (\r\n\t\t\t\t\t\t<Field component='input' name='fullName' />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tfullName\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<ProfileStatus\r\n\t\t\t\t\tisMyProfile={isMyProfile}\r\n\t\t\t\t\tstatus={status}\r\n\t\t\t\t\tupdateUserStatus={updateUserStatus}\r\n\t\t\t\t/>\r\n\t\t\t\t<PersonalInfoWrap\r\n\t\t\t\t\tisMyProfile={isMyProfile}\r\n\t\t\t\t\tsetPageEditMode={setPageEditMode}\r\n\t\t\t\t\tpageEditMode={pageEditMode}\r\n\t\t\t\t\taboutMe={aboutMe}\r\n\t\t\t\t\tlookingForAJob={lookingForAJob}\r\n\t\t\t\t\tlookingForAJobDescription={lookingForAJobDescription}\r\n\t\t\t\t\tcontacts={contacts}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst PageInfoWrapWithEditMode = (props) => {\r\n\t// Переключатель режима редактирования информации пользователя\r\n\tconst [pageEditMode, setPageEditMode] = useState(false);\r\n\tconst {\r\n\t\tcontacts,\r\n\t\tfullName,\r\n\t\taboutMe,\r\n\t\tlookingForAJob,\r\n\t\tlookingForAJobDescription,\r\n\t} = props.profile;\r\n\r\n\treturn pageEditMode ? (\r\n\t\t<Form\r\n\t\t\tinitialValues={{\r\n\t\t\t\tuserId: props.userId,\r\n\t\t\t\tlookingForAJob,\r\n\t\t\t\tlookingForAJobDescription,\r\n\t\t\t\tfullName,\r\n\t\t\t\taboutMe,\r\n\t\t\t\t...contacts,\r\n\t\t\t}}\r\n\t\t\tonSubmit={(payload) => {\r\n\t\t\t\tprops.changeUserData(payload);\r\n\t\t\t}}\r\n\t\t\trender={({ handleSubmit }) => (\r\n\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t<PageInfoWrap\r\n\t\t\t\t\t\t{...props}\r\n\t\t\t\t\t\tpageEditMode={pageEditMode}\r\n\t\t\t\t\t\tsetPageEditMode={setPageEditMode}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</form>\r\n\t\t\t)}\r\n\t\t/>\r\n\t) : (\r\n\t\t<PageInfoWrap\r\n\t\t\tsetPageEditMode={setPageEditMode}\r\n\t\t\tpageEditMode={pageEditMode}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default PageInfoWrapWithEditMode;\r\n","import React from 'react';\r\nimport styles from './Profile.module.scss';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { fullValidation } from '../../../utilities/validators/validators';\r\nimport { Input } from '../../common/FormControls/FormControls';\r\n\r\nconst NewPostBlock = (props) => (\r\n\t<Form\r\n\t\tonSubmit={(values, form) => {\r\n\t\t\tprops.addPost(values.newPostInput);\r\n\t\t\tsetTimeout(form.restart);\r\n\t\t}}\r\n\t\trender={({ handleSubmit }) => (\r\n\t\t\t<form className={styles.newPostBlock} onSubmit={handleSubmit}>\r\n\t\t\t\t<Field\r\n\t\t\t\t\tname=\"newPostInput\"\r\n\t\t\t\t\tcomponent={Input}\r\n\t\t\t\t\tvalidate={fullValidation('', 1000, 'Enter the text of your message')}\r\n\t\t\t\t\tplaceholder={`What's up?`}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className={styles.buttonWrap}>\r\n\t\t\t\t\t<button type=\"submit\">Add post</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t)}\r\n\t/>\r\n);\r\n\r\nexport default React.memo(NewPostBlock);\r\n","import React from 'react';\r\nimport styles from './Profile.module.scss';\r\n\r\nconst ExistingPostsBlock = (props) => (\r\n\t<div className={styles.existingPostsBlock}>\r\n\t\t{props.posts.map((el) => (\r\n\t\t\t<div key={el.id} className={styles.post}>\r\n\t\t\t\t<div>{el.textPost}</div>\r\n\t\t\t\t<div className={styles.likes}>{el.amountLikes} likes</div>\r\n\t\t\t</div>\r\n\t\t)).reverse()}\r\n\t</div>\r\n);\r\n\r\nexport default React.memo(ExistingPostsBlock);\r\n","import React from 'react';\r\nimport styles from './Profile.module.scss';\r\nimport PageInfoWrap from './PageInfoWrap';\r\nimport NewPostBlock from './NewPostBlock';\r\nimport ExistingPostsBlock from './ExistingPostsBlock';\r\n\r\nconst Profile = ({\r\n\ttopImage,\r\n\tisMyProfile,\r\n\tprofile,\r\n\tdefaultAvatar,\r\n\tstatus,\r\n\tupdateUserStatus,\r\n\taddPost,\r\n\texistingPosts,\r\n\tisAuth,\r\n\tchangeMyPhoto,\r\n\tuserId,\r\n\tchangeUserData,\r\n}) => {\r\n\treturn (\r\n\t\t<div className={styles.profile}>\r\n\t\t\t<div className={styles.topImage}>\r\n\t\t\t\t<img src={topImage} alt='cover' />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.contentBlockWrapper}>\r\n\t\t\t\t<div className={styles.contentBlock}>\r\n\t\t\t\t\t<PageInfoWrap\r\n\t\t\t\t\t\tisMyProfile={isMyProfile}\r\n\t\t\t\t\t\tprofile={profile}\r\n\t\t\t\t\t\tdefaultAvatar={defaultAvatar}\r\n\t\t\t\t\t\tstatus={status}\r\n\t\t\t\t\t\tupdateUserStatus={updateUserStatus}\r\n\t\t\t\t\t\tchangeMyPhoto={changeMyPhoto}\r\n\t\t\t\t\t\tuserId={userId}\r\n\t\t\t\t\t\tchangeUserData={changeUserData}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className={styles.postsBlock}>\r\n\t\t\t\t\t\t{isAuth ? <NewPostBlock addPost={addPost} /> : ''}\r\n\t\t\t\t\t\t<ExistingPostsBlock posts={existingPosts} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default React.memo(Profile);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport defaultAvatar from '../../../assets/image/defaultAvatar.jpg';\r\nimport topImage from '../../../assets/image/les_tuman_derevia.jpg';\r\nimport { getAuthUserData } from '../../../redux/reducers/authReducer';\r\nimport {\r\n\taddPost,\r\n\tgetProfile,\r\n\tupdateUserStatus,\r\n\tchangeMyPhoto,\r\n\tchangeUserData,\r\n} from '../../../redux/reducers/profileReducer';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport Profile from './Profile';\r\n\r\nconst ProfileContainer = (props) => {\r\n\tconst {\r\n\t\tmatch: {\r\n\t\t\tparams: { userId },\r\n\t\t},\r\n\t\tauthUserId,\r\n\t\tgetProfile,\r\n\t\tisAuth,\r\n\t\tprofile,\r\n\t} = props;\r\n\r\n\tconst userIdInAddressBar = +userId;\r\n\r\n\t// Индикатор профиля авторизованного пользователя\r\n\tconst [isMyProfile, setIsMyProfile] = useState(false);\r\n\r\n\t// Выполняется при первом рендере и после каждого изменения id в адресной строке\r\n\tuseEffect(() => {\r\n\t\t// Если в адресной строке есть id\r\n\t\tif (userIdInAddressBar) {\r\n\t\t\t// Если id авторизованного пользователя и id в адресной строке совпадает\r\n\t\t\t// Указывает, что это профиль пользователя\r\n\t\t\tif (authUserId === userIdInAddressBar) {\r\n\t\t\t\tsetIsMyProfile(true);\r\n\t\t\t}\r\n\t\t\t// Запрос данных пользователя\r\n\t\t\tgetProfile(userIdInAddressBar);\r\n\t\t}\r\n\t}, [userIdInAddressBar, authUserId, getProfile]);\r\n\r\n\t// Если пользователь выполнил выход\r\n\tuseEffect(() => {\r\n\t\tif (!isAuth) {\r\n\t\t\tsetIsMyProfile(false);\r\n\t\t}\r\n\t}, [isAuth]);\r\n\r\n\t// Если в адресной строке указан id\r\n\tif (userIdInAddressBar) {\r\n\t\treturn profile ? (\r\n\t\t\t// Если данные профиля получены\r\n\t\t\t<Profile {...props} userId={authUserId} isMyProfile={isMyProfile} />\r\n\t\t) : (\r\n\t\t\t// Если идет получение данных\r\n\t\t\t<Preloader />\r\n\t\t);\r\n\t} else {\r\n\t\t// Если в адресной строке не указан id\r\n\t\treturn isAuth ? (\r\n\t\t\t// Редирект на профиль авторизованного пользователя\r\n\t\t\t<Redirect to={`/profile/${authUserId}`} />\r\n\t\t) : (\r\n\t\t\t// Если не авторизован, редирект на страницу логинизации\r\n\t\t\t<Redirect to='/login' />\r\n\t\t);\r\n\t}\r\n};\r\n\r\n// Данные из state передаваемые в props компонента\r\nconst mapStateToProps = (state) => ({\r\n\ttopImage,\r\n\tdefaultAvatar,\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tisAuth: state.auth.isAuth,\r\n\tauthUserId: state.auth.userId,\r\n\texistingPosts: state.profilePage.existingPosts,\r\n});\r\n\r\n// Actions for dispatchs\r\nconst mapDispatchToProps = {\r\n\tupdateUserStatus,\r\n\tgetAuthUserData,\r\n\taddPost,\r\n\tgetProfile,\r\n\tchangeMyPhoto,\r\n\tchangeUserData\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithRouter\r\n)(ProfileContainer);\r\n","export const required = (message) => (value) => (value ? undefined : message);\r\n\r\nexport const maxLength = (max) => (value) =>\r\n\tvalue && value.length > max ? `Max length is ${max} symbols` : undefined;\r\n\r\nconst minLength = (min) => (value) =>\r\n\tvalue && value.length < min ? `Min length is ${min} symbols` : undefined;\r\n\r\nconst composeValidators = (...validators) => (value) =>\r\n\tvalidators.reduce((error, validator) => error || validator(value), undefined);\r\n\r\nexport const fullValidation = (min, max, mess) =>\r\n\tcomposeValidators(minLength(min), maxLength(max), required(mess));\r\n","import React from 'react';\r\n\r\n// Компонент возвращающий поле для ввода, применяется в Field\r\n// Принимает данные ввода и мета-данные (ошибки и тд.)\r\nconst FormControl = ({ input, meta, ...props }) => {\r\n\t// Принимает в пропсах нужное поле ввода (input, textarea...)\r\n\tconst Element = props.element;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* Создание поля ввода и передача в него данных */}\r\n\t\t\t<Element\r\n\t\t\t\t{...input}\r\n\t\t\t\tplaceholder={props.placeholder}\r\n\t\t\t\tautoFocus={props.autoFocus}\r\n\t\t\t\tmaxLength={props.maxLength}\r\n\t\t\t/>\r\n\t\t\t{/* Вывод на основании ошибок валидации */}\r\n\t\t\t{meta.error &&\r\n\t\t\t\t// Если есть ошибка и введено больше 5 символов, выводит ошибку\r\n\t\t\t\t(input.value.length > 5 ? (\r\n\t\t\t\t\t<span>{meta.error}</span>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t// Если есть ошибка, но символов меньше 5, выводит ошибку когда поле было затронуто\r\n\t\t\t\t\tmeta.touched && <span>{meta.error}</span>\r\n\t\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n// Компоненты для создания конкретных полей ввода\r\nexport const Input = (props) => {\r\n\treturn <FormControl element='input' {...props} />;\r\n};\r\nexport const Textarea = (props) => (\r\n\t<FormControl element='textarea' {...props} />\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3cqaC\",\"topImage\":\"Profile_topImage__1QeV6\",\"contentBlockWrapper\":\"Profile_contentBlockWrapper__1FqB6\",\"contentBlock\":\"Profile_contentBlock__65spg\",\"pageWrap\":\"Profile_pageWrap__3msTY\",\"avatar\":\"Profile_avatar__2HO6t\",\"pageInfoWrap\":\"Profile_pageInfoWrap__1UdYi\",\"pageName\":\"Profile_pageName__13q-Z\",\"status\":\"Profile_status__1rx6s\",\"myStatus\":\"Profile_myStatus__mCoRb\",\"enterStatus\":\"Profile_enterStatus__1MqOo\",\"personalInfoWrap\":\"Profile_personalInfoWrap__2PMRp\",\"topBorder\":\"Profile_topBorder__1s0dm\",\"editModeButton\":\"Profile_editModeButton__P3IND\",\"personalInfo\":\"Profile_personalInfo__1EwfG\",\"aboutMeBlock\":\"Profile_aboutMeBlock__1vcdq\",\"pageInfoRow\":\"Profile_pageInfoRow__JDm_r\",\"contactsBlock\":\"Profile_contactsBlock__1OIs0\",\"contactsTitle\":\"Profile_contactsTitle__3FTfj\",\"contactsItem\":\"Profile_contactsItem__30pyP\",\"postsBlock\":\"Profile_postsBlock__zeNoh\",\"newPostBlock\":\"Profile_newPostBlock__giv8A\",\"buttonWrap\":\"Profile_buttonWrap__1RmpI\",\"existingPostsBlock\":\"Profile_existingPostsBlock__2kvb8\",\"post\":\"Profile_post__2MTw2\",\"likes\":\"Profile_likes__2O56D\"};","module.exports = __webpack_public_path__ + \"static/media/les_tuman_derevia.712fe5c8.jpg\";"],"sourceRoot":""}