{"version":3,"sources":["components/Main/Profile/Profile.module.scss","assets/image/les_tuman_derevia.jpg","components/Main/Profile/PageInfo/PageInfo.module.scss","components/Main/Profile/PageInfoForm/PageInfoForm.module.scss","components/common/Errors/Error.module.scss","components/Main/Profile/PageInfo/ProfileStatus.js","components/Main/Profile/PageInfo/PageInfo.js","components/Main/Profile/NewPostBlock.js","components/Main/Profile/ExistingPostsBlock.js","components/Main/Profile/PageInfoForm/PageInfoForm.js","components/Main/Profile/Profile.js","components/common/Errors/Error.js","components/Main/Profile/ProfileContainer.js","utilities/useScrollToTop.js","components/common/FormControls/FormControls.js","components/common/FormControls/FormControls.module.scss"],"names":["module","exports","React","memo","status","updateUserStatus","isMyProfile","useState","editMode","setEditMode","className","styles","initialValues","onSubmit","form","handleSubmit","onBlur","autoFocus","component","name","maxLength","onClick","undefined","title","myStatus","enterStatus","PhotoFullWindow","photo","setIsPhotoFullWindow","useEffect","document","body","style","overflow","photoFullWindowWrap","photoFullwindow","src","alt","Contacts","items","contacts","itemExist","Object","entries","map","contact","key","contactsItem","contactName","contactsBlock","contactsTitle","AboutMe","aboutMe","lookingForAJob","lookingForAJobDescription","aboutMeBlock","pageInfoRow","PageInfo","defaultAvatar","changeMyPhoto","setPageEditMode","profile","photos","fullName","isPhotoFullWindow","large","pageWrap","page","pageHead","avatar","cn","isExist","id","type","onChange","e","target","files","length","htmlFor","mainInfo","pageName","personalInfoWrap","topBorder","editModeButton","personalInfo","NewPostValidatioSchema","yup","shape","newPostInput","required","props","validationSchema","values","actions","addPost","resetForm","errors","touched","newPostBlock","as","Input","placeholder","error","buttonWrap","existingPostsBlock","posts","el","post","textPost","likes","amountLikes","reverse","ErrorOutput","errorIndex","setErrorIndex","blinkError","setBlinkError","mainTimeout","blinkTumeout","any","setTimeout","clearTimeout","errorsWrap","PageInfoForm","changeUserData","useScrollToTop","a","setErrors","pageInfoFormWrap","inputItem","nameItem","textField","Textarea","checkboxField","value","buttons","saveButton","cancelButton","topImage","existingPosts","isAuth","userId","pageEditMode","contentBlockWrapper","contentBlock","postsBlock","SomeError","mapDispatchToProps","getAuthUserData","getProfile","setUserProfile","setErrorDownloadProfile","compose","connect","state","profilePage","auth","authUserId","errorDownloadProfile","isFetchingProfile","withRouter","match","params","userIdInAddressBar","setIsMyProfile","Preloader","to","pathname","useLocation","window","scrollTo","FormControl","serverError","Element","element","errorStyle","setErrorStyle","errorStyleTimeout","defaultElement"],"mappings":"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","file":"static/js/4.799d6434.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__24dQj\",\"topImage\":\"Profile_topImage__3k5gz\",\"contentBlockWrapper\":\"Profile_contentBlockWrapper__3ipwh\",\"contentBlock\":\"Profile_contentBlock__3q3HQ\",\"postsBlock\":\"Profile_postsBlock__2Gd1F\",\"newPostBlock\":\"Profile_newPostBlock__1uYCA\",\"buttonWrap\":\"Profile_buttonWrap__2jvY0\",\"existingPostsBlock\":\"Profile_existingPostsBlock__3nIZ5\",\"post\":\"Profile_post__dM7oM\",\"likes\":\"Profile_likes__J4shs\"};","module.exports = __webpack_public_path__ + \"static/media/les_tuman_derevia.712fe5c8.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageWrap\":\"PageInfo_pageWrap__1JWAl\",\"page\":\"PageInfo_page__1xNWf\",\"pageHead\":\"PageInfo_pageHead__3cuSy\",\"avatar\":\"PageInfo_avatar__3oNFW\",\"isExist\":\"PageInfo_isExist__3W9vI\",\"mainInfo\":\"PageInfo_mainInfo__1TFtc\",\"pageName\":\"PageInfo_pageName__1C-qF\",\"status\":\"PageInfo_status__1isHg\",\"myStatus\":\"PageInfo_myStatus__2io3W\",\"enterStatus\":\"PageInfo_enterStatus__SIOj_\",\"personalInfoWrap\":\"PageInfo_personalInfoWrap__2Uo3L\",\"topBorder\":\"PageInfo_topBorder__2yvHs\",\"editModeButton\":\"PageInfo_editModeButton__16xZE\",\"personalInfo\":\"PageInfo_personalInfo__Xq_xe\",\"aboutMeBlock\":\"PageInfo_aboutMeBlock__3_SCd\",\"pageInfoRow\":\"PageInfo_pageInfoRow__1F2Vi\",\"contactsBlock\":\"PageInfo_contactsBlock__22k27\",\"contactsTitle\":\"PageInfo_contactsTitle__2soNv\",\"contactsItem\":\"PageInfo_contactsItem__1IhFT\",\"photoFullWindowWrap\":\"PageInfo_photoFullWindowWrap__1uZOB\",\"photoFullwindow\":\"PageInfo_photoFullwindow__-lpwC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageInfoFormWrap\":\"PageInfoForm_pageInfoFormWrap__1uaxI\",\"inputItem\":\"PageInfoForm_inputItem__CtPwK\",\"nameItem\":\"PageInfoForm_nameItem__3RBTM\",\"checkboxField\":\"PageInfoForm_checkboxField__2Z1h8\",\"textField\":\"PageInfoForm_textField__3eeoX\",\"contactsTitle\":\"PageInfoForm_contactsTitle__3nvBh\",\"buttons\":\"PageInfoForm_buttons__1aJw8\",\"errorsWrap\":\"PageInfoForm_errorsWrap__2cczM\",\"errors\":\"PageInfoForm_errors__3yN6N\",\"blinkError\":\"PageInfoForm_blinkError__1Vu7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__u3ZN2\"};","import React, { useState } from 'react';\r\nimport styles from '../Profile.module.scss';\r\nimport { Formik, Field } from 'formik';\r\n\r\nconst ProfileStatus = ({ status, updateUserStatus, isMyProfile }) => {\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{editMode ? (\r\n\t\t\t\t<div className={styles.status}>\r\n\t\t\t\t\t<Formik\r\n\t\t\t\t\t\tinitialValues={{\r\n\t\t\t\t\t\t\tstatus: status,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonSubmit={({ status }, form) => {\r\n\t\t\t\t\t\t\tupdateUserStatus(status);\r\n\t\t\t\t\t\t\tsetEditMode(false);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{({ handleSubmit }) => (\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tonBlur={handleSubmit}\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tcomponent='input'\r\n\t\t\t\t\t\t\t\tname='status'\r\n\t\t\t\t\t\t\t\tmaxLength='300'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Formik>\r\n\t\t\t\t</div>\r\n\t\t\t) : status || isMyProfile ? (\r\n\t\t\t\t<div className={styles.status}>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tonClick={isMyProfile ? activateEditMode : undefined}\r\n\t\t\t\t\t\ttitle={isMyProfile ? 'Click to change your status' : ''}\r\n\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\tisMyProfile ? (status ? styles.myStatus : styles.enterStatus) : ''\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{status || 'Enter your status...'}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t) : undefined}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default React.memo(ProfileStatus);\r\n","import React, { useState, useEffect } from 'react';\r\nimport styles from './PageInfo.module.scss';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport cn from 'classnames';\r\n\r\nconst PhotoFullWindow = ({ photo, setIsPhotoFullWindow }) => {\r\n\tuseEffect(() => {\r\n\t\tdocument.body.style.overflow = 'hidden';\r\n\t\treturn () => (document.body.style.overflow = 'auto');\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={styles.photoFullWindowWrap}\r\n\t\t\tonClick={() => setIsPhotoFullWindow(false)}\r\n\t\t>\r\n\t\t\t<div className={styles.photoFullwindow}>\r\n\t\t\t\t<img src={photo} alt='' />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Contacts = ({ contacts }) => {\r\n\tlet itemExist = false;\r\n\tlet items;\r\n\tif (contacts) {\r\n\t\titems = Object.entries(contacts).map((contact) => {\r\n\t\t\tif (contact[1]) {\r\n\t\t\t\titemExist = true;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={contact[0]} className={styles.contactsItem}>\r\n\t\t\t\t\t\t<span className={styles.contactName}>{`${contact[0]}: `}</span>\r\n\t\t\t\t\t\t{contact[1]}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.contactsBlock}>\r\n\t\t\t{itemExist ? (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className={styles.contactsTitle}>Contacts:</div>\r\n\t\t\t\t\t{items}\r\n\t\t\t\t</>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst AboutMe = ({ aboutMe, lookingForAJob, lookingForAJobDescription }) => {\r\n\treturn (\r\n\t\t<div className={styles.aboutMeBlock}>\r\n\t\t\t{/* About me */}\r\n\t\t\t{aboutMe ? (\r\n\t\t\t\t<div className={styles.pageInfoRow}>\r\n\t\t\t\t\t<span>About me:</span>\r\n\t\t\t\t\t{aboutMe}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\r\n\t\t\t{/* Looking for a job */}\r\n\t\t\t<div className={styles.pageInfoRow}>\r\n\t\t\t\t<span>Looking for a job: </span>\r\n\t\t\t\t{lookingForAJob ? 'Yes' : 'No'}\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Looking for a job description */}\r\n\t\t\t{lookingForAJobDescription ? (\r\n\t\t\t\t<div className={styles.pageInfoRow}>{lookingForAJobDescription}</div>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// Общий блок информации о пользователе\r\nconst PageInfo = ({\r\n\tdefaultAvatar,\r\n\tisMyProfile,\r\n\tstatus,\r\n\tupdateUserStatus,\r\n\tchangeMyPhoto,\r\n\tsetPageEditMode,\r\n\tprofile: {\r\n\t\tcontacts,\r\n\t\tphotos,\r\n\t\tfullName,\r\n\t\taboutMe,\r\n\t\tlookingForAJob,\r\n\t\tlookingForAJobDescription,\r\n\t},\r\n}) => {\r\n\t// Функция для отправки фото профиля на сервер\r\n\tconst onMyPhotoSelected = (e) => {\r\n\t\tif (e.target.files.length) {\r\n\t\t\tchangeMyPhoto(e.target.files[0]);\r\n\t\t}\r\n\t};\r\n\r\n\tconst [isPhotoFullWindow, setIsPhotoFullWindow] = useState(false);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isPhotoFullWindow && (\r\n\t\t\t\t<PhotoFullWindow\r\n\t\t\t\t\tsetIsPhotoFullWindow={setIsPhotoFullWindow}\r\n\t\t\t\t\tphoto={photos.large}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t<div className={styles.pageWrap}>\r\n\t\t\t\t<div className={styles.page}>\r\n\t\t\t\t\t<div className={styles.pageHead}>\r\n\t\t\t\t\t\t{/* User photo */}\r\n\t\t\t\t\t\t<div className={styles.avatar}>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tonClick={photos.large && (() => setIsPhotoFullWindow(true))}\r\n\t\t\t\t\t\t\t\tsrc={photos && (photos.large || defaultAvatar)}\r\n\t\t\t\t\t\t\t\tclassName={cn({ [styles.isExist]: photos.large })}\r\n\t\t\t\t\t\t\t\talt='avatar'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{isMyProfile && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tid='setPhoto'\r\n\t\t\t\t\t\t\t\t\t\ttype='file'\r\n\t\t\t\t\t\t\t\t\t\tonChange={onMyPhotoSelected}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<label htmlFor='setPhoto'>Set photo</label>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{/* Page info */}\r\n\t\t\t\t\t\t<div className={styles.mainInfo}>\r\n\t\t\t\t\t\t\t{/* User name */}\r\n\t\t\t\t\t\t\t<div className={styles.pageName}>{fullName}</div>\r\n\r\n\t\t\t\t\t\t\t{/* User status */}\r\n\t\t\t\t\t\t\t<ProfileStatus\r\n\t\t\t\t\t\t\t\tisMyProfile={isMyProfile}\r\n\t\t\t\t\t\t\t\tstatus={status}\r\n\t\t\t\t\t\t\t\tupdateUserStatus={updateUserStatus}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* User info */}\r\n\t\t\t\t\t<div className={styles.personalInfoWrap}>\r\n\t\t\t\t\t\t<div className={styles.topBorder}>\r\n\t\t\t\t\t\t\tPersonal information\r\n\t\t\t\t\t\t\t{/* Edit mode button */}\r\n\t\t\t\t\t\t\t{isMyProfile && (\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={() => setPageEditMode(true)}\r\n\t\t\t\t\t\t\t\t\tclassName={styles.editModeButton}\r\n\t\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tEdit\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className={styles.personalInfo}>\r\n\t\t\t\t\t\t\t<AboutMe\r\n\t\t\t\t\t\t\t\taboutMe={aboutMe}\r\n\t\t\t\t\t\t\t\tlookingForAJob={lookingForAJob}\r\n\t\t\t\t\t\t\t\tlookingForAJobDescription={lookingForAJobDescription}\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<Contacts contacts={contacts} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default PageInfo;\r\n","import React from 'react';\r\nimport styles from './Profile.module.scss';\r\nimport { Input } from '../../common/FormControls/FormControls';\r\nimport { Formik, Field } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst NewPostValidatioSchema = yup.object().shape({\r\n\tnewPostInput: yup.string().required(),\r\n});\r\n\r\nconst NewPostBlock = (props) => (\r\n\t<Formik\r\n\t\tinitialValues={{\r\n\t\t\tnewPostInput: '',\r\n\t\t}}\r\n\t\tvalidationSchema={NewPostValidatioSchema}\r\n\t\tonSubmit={(values, actions) => {\r\n\t\t\tprops.addPost(values.newPostInput);\r\n\t\t\tactions.resetForm()\r\n\t\t}}\r\n\t>\r\n\t\t{({ handleSubmit, errors, touched }) => (\r\n\t\t\t<form className={styles.newPostBlock} onSubmit={handleSubmit}>\r\n\t\t\t\t<Field\r\n\t\t\t\t\tname='newPostInput'\r\n\t\t\t\t\tas={Input}\r\n\t\t\t\t\tplaceholder={`What's up?`}\r\n\t\t\t\t\terror={errors.newPostInput}\r\n\t\t\t\t\ttouched={touched.newPostInput}\r\n\t\t\t\t\tmaxLength='1000'\r\n\t\t\t\t/>\r\n\t\t\t\t<div className={styles.buttonWrap}>\r\n\t\t\t\t\t<button type='submit'>Add post</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t)}\r\n\t</Formik>\r\n);\r\n\r\nexport default React.memo(NewPostBlock);\r\n","import React from 'react';\r\nimport styles from './Profile.module.scss';\r\n\r\nconst ExistingPostsBlock = (props) => (\r\n\t<div className={styles.existingPostsBlock}>\r\n\t\t{props.posts.map((el) => (\r\n\t\t\t<div key={el.id} className={styles.post}>\r\n\t\t\t\t<div>{el.textPost}</div>\r\n\t\t\t\t<div className={styles.likes}>{el.amountLikes} likes</div>\r\n\t\t\t</div>\r\n\t\t)).reverse()}\r\n\t</div>\r\n);\r\n\r\nexport default React.memo(ExistingPostsBlock);\r\n","import React, { useState, useEffect } from 'react';\r\nimport styles from './PageInfoForm.module.scss';\r\nimport { Textarea, Input } from '../../../common/FormControls/FormControls';\r\nimport { Formik, Field } from 'formik';\r\nimport cn from 'classnames';\r\nimport useScrollToTop from '../../../../utilities/useScrollToTop';\r\n\r\nconst ErrorOutput = ({ errors }) => {\r\n\tconst [errorIndex, setErrorIndex] = useState(0);\r\n\tconst [blinkError, setBlinkError] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet mainTimeout;\r\n\t\tlet blinkTumeout;\r\n\t\tif (errors && errors.any && errors.any.length > 1) {\r\n\t\t\tmainTimeout = setTimeout(() => {\r\n\t\t\t\tif (errors && errors.any && errorIndex < errors.any.length - 1) {\r\n\t\t\t\t\tsetErrorIndex(errorIndex + 1);\r\n\t\t\t\t\tsetBlinkError(true);\r\n\t\t\t\t\tblinkTumeout = setTimeout(() => {\r\n\t\t\t\t\t\tsetBlinkError(false);\r\n\t\t\t\t\t}, 500);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetErrorIndex(0);\r\n\t\t\t\t\tsetBlinkError(true);\r\n\t\t\t\t\tblinkTumeout = setTimeout(() => {\r\n\t\t\t\t\t\tsetBlinkError(false);\r\n\t\t\t\t\t}, 500);\r\n\t\t\t\t}\r\n\t\t\t}, 2000);\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tclearTimeout(mainTimeout);\r\n\t\t\tclearTimeout(blinkTumeout);\r\n\t\t};\r\n\t}, [errors, errorIndex]);\r\n\treturn (\r\n\t\t<div className={styles.errorsWrap}>\r\n\t\t\t{errors.any ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={cn(styles.errors, {\r\n\t\t\t\t\t\t[styles.blinkError]: blinkError,\r\n\t\t\t\t\t})}\r\n\t\t\t\t>\r\n\t\t\t\t\t{errors.any[errorIndex]}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst PageInfoForm = ({\r\n\tsetPageEditMode,\r\n\tprofile: {\r\n\t\tcontacts,\r\n\t\tfullName,\r\n\t\taboutMe,\r\n\t\tlookingForAJob,\r\n\t\tlookingForAJobDescription,\r\n\t},\r\n\tchangeUserData,\r\n}) => {\r\n\tuseScrollToTop()\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{\r\n\t\t\t\tcontacts,\r\n\t\t\t\tfullName,\r\n\t\t\t\taboutMe,\r\n\t\t\t\tlookingForAJob,\r\n\t\t\t\tlookingForAJobDescription,\r\n\t\t\t}}\r\n\t\t\tonSubmit={async (values, actions) => {\r\n\t\t\t\tconst error = await changeUserData(values);\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tactions.setErrors(error);\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{({ handleSubmit, errors, touched, values }) => (\r\n\t\t\t\t<div className={styles.pageInfoFormWrap}>\r\n\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<fieldset>\r\n\t\t\t\t\t\t\t<legend>Personal info</legend>\r\n\t\t\t\t\t\t\t<div className={cn(styles.fullName, styles.inputItem)}>\r\n\t\t\t\t\t\t\t\t<div className={styles.nameItem}>Your name: </div>\r\n\t\t\t\t\t\t\t\t<div className={styles.textField}>\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tas={Input}\r\n\t\t\t\t\t\t\t\t\t\tname='fullName'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Your name'\r\n\t\t\t\t\t\t\t\t\t\terror={errors.fullName}\r\n\t\t\t\t\t\t\t\t\t\ttouched={touched.fullName}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className={styles.aboutMeBlock}>\r\n\t\t\t\t\t\t\t\t<div className={styles.inputItem}>\r\n\t\t\t\t\t\t\t\t\t<div className={styles.nameItem}>About me: </div>\r\n\t\t\t\t\t\t\t\t\t<div className={styles.textField}>\r\n\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\tas={Textarea}\r\n\t\t\t\t\t\t\t\t\t\t\tname='aboutMe'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='About me'\r\n\t\t\t\t\t\t\t\t\t\t\terror={errors.aboutMe}\r\n\t\t\t\t\t\t\t\t\t\t\ttouched={touched.aboutMe}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className={styles.inputItem}>\r\n\t\t\t\t\t\t\t\t\t<label className={styles.nameItem} htmlFor='lookingForAJob'>\r\n\t\t\t\t\t\t\t\t\t\tLooking for a job:{' '}\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t<div className={styles.checkboxField}>\r\n\t\t\t\t\t\t\t\t\t\t<Field type='checkbox' name='lookingForAJob' />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className={styles.inputItem}>\r\n\t\t\t\t\t\t\t\t\t<div className={styles.nameItem}>Your skills: </div>\r\n\t\t\t\t\t\t\t\t\t<div className={styles.textField}>\r\n\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\tas={Textarea}\r\n\t\t\t\t\t\t\t\t\t\t\tname='lookingForAJobDescription'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Description'\r\n\t\t\t\t\t\t\t\t\t\t\terror={errors.lookingForAJobDescription}\r\n\t\t\t\t\t\t\t\t\t\t\ttouched={touched.lookingForAJobDescription}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className={styles.contactsBlock}>\r\n\t\t\t\t\t\t\t\t<div className={styles.contactsTitle}>Contacts:</div>\r\n\t\t\t\t\t\t\t\t{Object.entries(contacts).map((contact) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tkey={contact[0]}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={cn(styles.contactsItem, styles.inputItem)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={styles.nameItem}>{`${contact[0]}: `}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={styles.textField}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tas={Input}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={`contacts.${contact[0]}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.contacts[contact[0]] || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.contacts &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.contacts[contact[0]]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttouched={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttouched &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttouched.contacts &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttouched.contacts[contact[0]]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{/* Кнопки */}\r\n\t\t\t\t\t\t\t<div className={styles.buttons}>\r\n\t\t\t\t\t\t\t\t<button type='submit' className={styles.saveButton}>\r\n\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={() => setPageEditMode(false)}\r\n\t\t\t\t\t\t\t\t\tclassName={styles.cancelButton}\r\n\t\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</fieldset>\r\n\r\n\t\t\t\t\t\t<ErrorOutput errors={errors} />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default PageInfoForm;\r\n","import React, { useState } from 'react';\r\nimport styles from './Profile.module.scss';\r\nimport PageInfo from './PageInfo/PageInfo';\r\nimport NewPostBlock from './NewPostBlock';\r\nimport ExistingPostsBlock from './ExistingPostsBlock';\r\nimport PageInfoForm from './PageInfoForm/PageInfoForm';\r\nimport useScrollToTop from '../../../utilities/useScrollToTop';\r\n\r\nconst Profile = ({\r\n\ttopImage,\r\n\tisMyProfile,\r\n\tprofile,\r\n\tdefaultAvatar,\r\n\tstatus,\r\n\tupdateUserStatus,\r\n\taddPost,\r\n\texistingPosts,\r\n\tisAuth,\r\n\tchangeMyPhoto,\r\n\tuserId,\r\n\tchangeUserData,\r\n}) => {\r\n\t// Переключатель режима редактирования информации пользователя\r\n\tconst [pageEditMode, setPageEditMode] = useState(false);\r\n\t\r\n\tuseScrollToTop();\r\n\r\n\treturn pageEditMode ? (\r\n\t\t<PageInfoForm\r\n\t\t\tsetPageEditMode={setPageEditMode}\r\n\t\t\tprofile={profile}\r\n\t\t\tchangeUserData={changeUserData}\r\n\t\t/>\r\n\t) : (\r\n\t\t<div className={styles.profile}>\r\n\t\t\t<div className={styles.topImage}>\r\n\t\t\t\t<img src={topImage} alt='cover' />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.contentBlockWrapper}>\r\n\t\t\t\t<div className={styles.contentBlock}>\r\n\t\t\t\t\t<PageInfo\r\n\t\t\t\t\t\tisMyProfile={isMyProfile}\r\n\t\t\t\t\t\tprofile={profile}\r\n\t\t\t\t\t\tdefaultAvatar={defaultAvatar}\r\n\t\t\t\t\t\tstatus={status}\r\n\t\t\t\t\t\tupdateUserStatus={updateUserStatus}\r\n\t\t\t\t\t\tchangeMyPhoto={changeMyPhoto}\r\n\t\t\t\t\t\tuserId={userId}\r\n\t\t\t\t\t\tsetPageEditMode={setPageEditMode}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className={styles.postsBlock}>\r\n\t\t\t\t\t\t{isAuth ? <NewPostBlock addPost={addPost} /> : ''}\r\n\t\t\t\t\t\t<ExistingPostsBlock posts={existingPosts} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default React.memo(Profile);\r\n","import React from 'react';\r\nimport styles from './Error.module.scss';\r\n\r\nconst SomeError = () => (\r\n\t<div className={styles.error}>\r\n\t\tOops! Something went wrong...\r\n\t</div>\r\n);\r\nexport default SomeError;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport defaultAvatar from '../../../assets/image/defaultAvatar.jpg';\r\nimport topImage from '../../../assets/image/les_tuman_derevia.jpg';\r\nimport { getAuthUserData } from '../../../redux/reducers/authReducer';\r\nimport {\r\n\taddPost,\r\n\tgetProfile,\r\n\tupdateUserStatus,\r\n\tchangeMyPhoto,\r\n\tchangeUserData,\r\n\tsetUserProfile,\r\n\tsetErrorDownloadProfile,\r\n} from '../../../redux/reducers/profileReducer';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport Profile from './Profile';\r\nimport SomeError from '../../common/Errors/Error';\r\n\r\nconst ProfileContainer = (props) => {\r\n\tconst {\r\n\t\tmatch: {\r\n\t\t\tparams: { userId },\r\n\t\t},\r\n\t\tauthUserId,\r\n\t\tgetProfile,\r\n\t\tisAuth,\r\n\t\tprofile,\r\n\t\terrorDownloadProfile,\r\n\t\tsetErrorDownloadProfile,\r\n\t\tsetUserProfile,\r\n\t} = props\r\n\r\n\t// Id текущей страницы пользователя из адресной строки\r\n\tconst userIdInAddressBar = +userId;\r\n\r\n\t// Индикатор профиля авторизованного пользователя\r\n\tconst [isMyProfile, setIsMyProfile] = useState(false);\r\n\r\n\t// Выполняется при первом рендере и после каждого изменения id в адресной строке\r\n\tuseEffect(() => {\r\n\t\t// Если в адресной строке есть id\r\n\t\tif (userIdInAddressBar) {\r\n\t\t\t// Если id авторизованного пользователя и id в адресной строке совпадает\r\n\t\t\t// Указывает, что это профиль пользователя\r\n\t\t\tif (authUserId === userIdInAddressBar) {\r\n\t\t\t\tsetIsMyProfile(true);\r\n\t\t\t}\r\n\t\t\t// Запрос данных пользователя\r\n\t\t\tgetProfile(userIdInAddressBar);\r\n\t\t\treturn () => {\r\n\t\t\t\tsetErrorDownloadProfile(false);\r\n\t\t\t\tsetUserProfile(null);\r\n\t\t\t};\r\n\t\t}\r\n\t}, [\r\n\t\tuserIdInAddressBar,\r\n\t\tauthUserId,\r\n\t\tgetProfile,\r\n\t\tsetUserProfile,\r\n\t\tsetErrorDownloadProfile,\r\n\t]);\r\n\r\n\t// Если пользователь выполнил выход\r\n\tuseEffect(() => {\r\n\t\tif (!isAuth) {\r\n\t\t\tsetIsMyProfile(false);\r\n\t\t}\r\n\t}, [isAuth]);\r\n\r\n\t// Если в адресной строке указан id\r\n\tif (userIdInAddressBar) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{errorDownloadProfile && <SomeError />}\r\n\t\t\t\t{profile ? (\r\n\t\t\t\t\t<Profile {...props} isMyProfile={isMyProfile} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t// Если идет получение данных\r\n\t\t\t\t\t<Preloader />\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t} else {\r\n\t\t// Если в адресной строке не указан id\r\n\t\treturn isAuth ? (\r\n\t\t\t// Редирект на профиль авторизованного пользователя\r\n\t\t\t<Redirect to={`/profile/${authUserId}`} />\r\n\t\t) : (\r\n\t\t\t// Если не авторизован, редирект на страницу логинизации\r\n\t\t\t<Redirect to='/login' />\r\n\t\t);\r\n\t}\r\n};\r\n\r\n// Данные из state передаваемые в props компонента\r\nconst mapStateToProps = (state) => ({\r\n\ttopImage,\r\n\tdefaultAvatar,\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tisAuth: state.auth.isAuth,\r\n\tauthUserId: state.auth.userId,\r\n\texistingPosts: state.profilePage.existingPosts,\r\n\terrorDownloadProfile: state.profilePage.errorDownloadProfile,\r\n\tisFetchingProfile: state.profilePage.isFetchingProfile,\r\n});\r\n\r\n// Actions for dispatchs\r\nconst mapDispatchToProps = {\r\n\tupdateUserStatus,\r\n\tgetAuthUserData,\r\n\taddPost,\r\n\tgetProfile,\r\n\tchangeMyPhoto,\r\n\tchangeUserData,\r\n\tsetUserProfile,\r\n\tsetErrorDownloadProfile,\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithRouter,\r\n\tReact.memo\r\n)(ProfileContainer);\r\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst useScrollToTop = () => {\r\n\tconst { pathname } = useLocation();\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.scrollTo(0, 0);\r\n\t}, [pathname]);\r\n\r\n\treturn null;\r\n}\r\n\r\nexport default useScrollToTop","import React, { useEffect, useState } from 'react';\r\nimport styles from './FormControls.module.scss';\r\nimport cn from 'classnames';\r\n\r\n// Компонент возвращающий поле для ввода, применяется в Field\r\n// Принимает данные ввода и мета-данные (ошибки и тд.)\r\nconst FormControl = ({ error, touched, serverError, ...props }) => {\r\n\t// Принимает в пропсах нужное поле ввода (input, textarea...)\r\n\tconst Element = props.element;\r\n\r\n\tconst [errorStyle, setErrorStyle] = useState(false);\r\n\tuseEffect(() => {\r\n\t\tlet errorStyleTimeout;\r\n\t\tif (error && touched) {\r\n\t\t\tsetErrorStyle(true);\r\n\t\t\terrorStyleTimeout = setTimeout(() => {\r\n\t\t\t\tsetErrorStyle(false);\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\t\treturn () => clearTimeout(errorStyleTimeout);\r\n\t}, [error, touched]);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet errorStyleTimeout;\r\n\t\tif (serverError) {\r\n\t\t\tsetErrorStyle(true);\r\n\t\t\terrorStyleTimeout = setTimeout(() => {\r\n\t\t\t\tsetErrorStyle(false);\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\t\treturn () => clearTimeout(errorStyleTimeout);\r\n\t}, [serverError]);\r\n\r\n\treturn (\r\n\t\t<Element\r\n\t\t\t{...props}\r\n\t\t\tclassName={cn([styles.defaultElement], {\r\n\t\t\t\t[styles.error]: errorStyle,\r\n\t\t\t})}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\n// Компоненты для создания конкретных полей ввода\r\nexport const Input = (props) => {\r\n\treturn <FormControl element='input' {...props} />;\r\n};\r\nexport const Textarea = (props) => (\r\n\t<FormControl element='textarea' {...props} />\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultElement\":\"FormControls_defaultElement__2Hj9l\",\"error\":\"FormControls_error__hOQi8\"};"],"sourceRoot":""}