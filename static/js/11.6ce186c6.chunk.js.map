{"version":3,"sources":["utilities/useScrollToTop.js","components/Main/Login/Login.module.scss","assets/image/refresh.svg","../node_modules/@material-ui/core/esm/InputAdornment/InputAdornment.js","../node_modules/@material-ui/icons/esm/utils/createSvgIcon.js","../node_modules/@material-ui/icons/esm/Visibility.js","../node_modules/@material-ui/icons/esm/VisibilityOff.js","components/Main/Login/LoginForm.js","components/Main/Login/Login.js"],"names":["useScrollToTop","pathname","useLocation","useEffect","window","scrollTo","module","exports","InputAdornment","React","props","ref","children","classes","className","_props$component","component","Component","_props$disablePointer","disablePointerEvents","_props$disableTypogra","disableTypography","position","variantProp","variant","other","_objectWithoutProperties","muiFormControl","useFormControl","FormControlContext","Provider","value","_extends","clsx","root","hiddenLabel","filled","positionStart","positionEnd","margin","marginDense","Typography","color","withStyles","display","height","maxHeight","alignItems","whiteSpace","marginTop","marginRight","marginLeft","pointerEvents","name","createSvgIcon","path","displayName","memo","forwardRef","createElement","SvgIcon","muiName","d","LoginFormValidationSchema","yup","shape","email","required","max","password","validateCaptcha","error","length","LoginForm","loading","Preloader","initialValues","rememberMe","captcha","validationSchema","onSubmit","actions","handleSubmit","errors","touched","values","isSubmitting","status","handleReset","setFieldValue","styles","inputWrap","textField","type","as","TextField","placeholder","Boolean","emailServer","label","helperText","FormControl","passwordServer","InputLabel","htmlFor","id","OutlinedInput","passwordShown","labelWidth","endAdornment","IconButton","onMouseDown","Visibility","VisibilityOff","FormHelperText","checkboxWrap","FormControlLabel","control","Checkbox","checked","captchaUrl","captchaServer","validate","captchaImg","onClick","getCaptcha","src","refreshImg","alt","buttons","Button","disabled","connect","state","isAuth","auth","authUserId","userId","signIn","getAuthUserData","useState","setLoading","a","setStatus","resetForm","setErrors","to","loginContainer","greeting"],"mappings":"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","file":"static/js/11.6ce186c6.chunk.js","sourcesContent":["import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst useScrollToTop = () => {\r\n\tconst { pathname } = useLocation();\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.scrollTo(0, 0);\r\n\t}, [pathname]);\r\n\r\n\treturn null;\r\n}\r\n\r\nexport default useScrollToTop","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__73dZ_\",\"greeting\":\"Login_greeting__3j1Aq\",\"textField\":\"Login_textField__24Mqm\",\"inputWrap\":\"Login_inputWrap__3WCBf\",\"checkboxWrap\":\"Login_checkboxWrap__KZ-W6\",\"captcha\":\"Login_captcha__JkvBf\",\"captchaImg\":\"Login_captchaImg__2uuVp\",\"buttons\":\"Login_buttons__2U3JT\",\"error\":\"Login_error__1tL77\"};","module.exports = __webpack_public_path__ + \"static/media/refresh.8c6e329c.svg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Typography from '../Typography';\nimport withStyles from '../styles/withStyles';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE 11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap'\n  },\n\n  /* Styles applied to the root element if `variant=\"filled\"`. */\n  filled: {\n    '&$positionStart:not($hiddenLabel)': {\n      marginTop: 16\n    }\n  },\n\n  /* Styles applied to the root element if `position=\"start\"`. */\n  positionStart: {\n    marginRight: 8\n  },\n\n  /* Styles applied to the root element if `position=\"end\"`. */\n  positionEnd: {\n    marginLeft: 8\n  },\n\n  /* Styles applied to the root element if `disablePointerEvents=true`. */\n  disablePointerEvents: {\n    pointerEvents: 'none'\n  },\n\n  /* Styles applied if the adornment is used inside <FormControl hiddenLabel />. */\n  hiddenLabel: {},\n\n  /* Styles applied if the adornment is used inside <FormControl margin=\"dense\" />. */\n  marginDense: {}\n};\nvar InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disablePointer = props.disablePointerEvents,\n      disablePointerEvents = _props$disablePointer === void 0 ? false : _props$disablePointer,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      position = props.position,\n      variantProp = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  var muiFormControl = useFormControl() || {};\n  var variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: null\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, disablePointerEvents && classes.disablePointerEvents, muiFormControl.hiddenLabel && classes.hiddenLabel, variant === 'filled' && classes.filled, {\n      'start': classes.positionStart,\n      'end': classes.positionEnd\n    }[position], muiFormControl.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), typeof children === 'string' && !disableTypography ? /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\"\n  }, children) : children));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes = {\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the input on click.\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  muiFormControl: PropTypes.object,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['start', 'end']),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputAdornment'\n})(InputAdornment);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');","import React from 'react';\r\nimport styles from './Login.module.scss';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport * as yup from 'yup';\r\nimport { Formik, Field } from 'formik';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n\tTextField,\r\n\tInputAdornment,\r\n\tIconButton,\r\n\tFormControl,\r\n\tInputLabel,\r\n\tOutlinedInput,\r\n\tFormHelperText,\r\n\tCheckbox,\r\n\tFormControlLabel,\r\n} from '@material-ui/core';\r\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\r\n\r\nconst LoginFormValidationSchema = yup.object().shape({\r\n\temail: yup\r\n\t\t.string()\r\n\t\t.email('Must be a valid email')\r\n\t\t.required('Required')\r\n\t\t.max(30, 'Must be 30 characters or less'),\r\n\tpassword: yup\r\n\t\t.string()\r\n\t\t.required('Required')\r\n\t\t.max(30, 'Must be 30 characters or less'),\r\n});\r\n\r\n// Отдельная валидация для капчи, когда сервер запрашивает капчу,\r\n// нужно повесить Required, если сделать это в общей валидации,\r\n// форма не будет отправляться, даже если сервер еще не запросил капчу\r\n// и поле для ее ввода еще не отобразилось\r\nconst validateCaptcha = (value) => {\r\n\tlet error;\r\n\tif (!value) {\r\n\t\terror = 'Required';\r\n\t} else if (value.length > 15) {\r\n\t\terror = 'Must be 30 characters or less';\r\n\t}\r\n\treturn error;\r\n};\r\n\r\nconst LoginForm = (props) => (\r\n\t<>\r\n\t\t{props.loading && <Preloader />}\r\n\t\t<Formik\r\n\t\t\tinitialValues={{\r\n\t\t\t\trememberMe: true,\r\n\t\t\t\temail: '',\r\n\t\t\t\tpassword: '',\r\n\t\t\t\tcaptcha: '',\r\n\t\t\t}}\r\n\t\t\tvalidationSchema={LoginFormValidationSchema}\r\n\t\t\tonSubmit={({ email, password, rememberMe, captcha }, actions) =>\r\n\t\t\t\tprops.onSubmit({ email, password, rememberMe, captcha }, actions)\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\terrors,\r\n\t\t\t\ttouched,\r\n\t\t\t\tvalues,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\tstatus,\r\n\t\t\t\thandleReset,\r\n\t\t\t\tsetFieldValue,\r\n\t\t\t}) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<div className={styles.inputWrap}>\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tclassName={styles.textField}\r\n\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\t\tas={TextField}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter your email\"\r\n\t\t\t\t\t\t\t\terror={Boolean(\r\n\t\t\t\t\t\t\t\t\t(errors.email && touched.email) || errors.emailServer\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\thelperText={touched.email && errors.email}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.inputWrap}>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\tclassName={styles.textField}\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\tBoolean(errors.password && touched.password) ||\r\n\t\t\t\t\t\t\t\t\terrors.passwordServer\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"sign-in-password\">Password</InputLabel>\r\n\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\tid=\"sign-in-password\"\r\n\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\tas={OutlinedInput}\r\n\t\t\t\t\t\t\t\t\ttype={values.passwordShown ? 'text' : 'password'}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your password\"\r\n\t\t\t\t\t\t\t\t\tlabelWidth={65}\r\n\t\t\t\t\t\t\t\t\tendAdornment={\r\n\t\t\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\r\n\t\t\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\t\t\tonMouseDown={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (values.passwordShown) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('passwordShown', false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue('passwordShown', true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{values.passwordShown ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Visibility />\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<VisibilityOff />\r\n\t\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t\t\t</InputAdornment>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<FormHelperText>\r\n\t\t\t\t\t\t\t\t\t{touched.password && errors.password}\r\n\t\t\t\t\t\t\t\t</FormHelperText>\r\n\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.checkboxWrap}>\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tlabel=\"Remember me\"\r\n\t\t\t\t\t\t\t\tname=\"rememberMe\"\r\n\t\t\t\t\t\t\t\tcontrol={\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tas={Checkbox}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\tchecked={values.rememberMe ? true : false}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{props.captchaUrl && (\r\n\t\t\t\t\t\t\t<div className={styles.captcha}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tclassName={styles.textField}\r\n\t\t\t\t\t\t\t\t\t\tas={TextField}\r\n\t\t\t\t\t\t\t\t\t\tname=\"captcha\"\r\n\t\t\t\t\t\t\t\t\t\tlabel={'Type the characters below'}\r\n\t\t\t\t\t\t\t\t\t\terror={Boolean(\r\n\t\t\t\t\t\t\t\t\t\t\t(errors.captcha && touched.captcha) ||\r\n\t\t\t\t\t\t\t\t\t\t\t\terrors.captchaServer\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\tvalidate={validateCaptcha}\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t\t\t\thelperText={touched.captcha && errors.captcha}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className={styles.captchaImg}>\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" onClick={props.getCaptcha}>\r\n\t\t\t\t\t\t\t\t\t\t<img src={props.refreshImg} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t<img src={props.captchaUrl} alt=\"Captcha\" />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className={styles.buttons}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLog in\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={handleReset}\r\n\t\t\t\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tReset\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.error}>{status}</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t);\r\n\t\t\t}}\r\n\t\t</Formik>\r\n\t</>\r\n);\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {\r\n\tgetAuthUserData,\r\n\tsignIn,\r\n\tgetCaptcha,\r\n} from '../../../redux/reducers/authReducer';\r\nimport styles from './Login.module.scss';\r\nimport LoginForm from './LoginForm';\r\nimport refreshImg from '../../../assets/image/refresh.svg';\r\nimport useScrollToTop from '../../../utilities/useScrollToTop';\r\n\r\nconst Login = (props) => {\r\n\tuseScrollToTop();\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst onSubmit = async (values, actions) => {\r\n\t\tactions.setStatus();\r\n\t\tsetLoading(true);\r\n\t\tconst error = await props.signIn(values);\r\n\t\tactions.resetForm({\r\n\t\t\tvalues: {\r\n\t\t\t\trememberMe: true,\r\n\t\t\t\tpasswordShown: false,\r\n\t\t\t\temail: values.email,\r\n\t\t\t\tpassword: values.password,\r\n\t\t\t\tcaptcha: '',\r\n\t\t\t},\r\n\t\t});\r\n\t\tsetLoading(false);\r\n\t\tif (error) {\r\n\t\t\tconst errors = {};\r\n\t\t\tactions.setStatus(error);\r\n\t\t\tif (error === 'Incorrect Email or Password') {\r\n\t\t\t\terrors.emailServer = 'Incorrect Email or Password';\r\n\t\t\t\terrors.passwordServer = 'Incorrect Email or Password';\r\n\t\t\t\tactions.setErrors(errors);\r\n\t\t\t}\r\n\t\t\tif (error === 'Incorrect anti-bot symbols') {\r\n\t\t\t\terrors.captchaServer = 'Incorrect anti-bot symbols';\r\n\t\t\t\tactions.setErrors(errors);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\treturn props.isAuth ? (\r\n\t\t<Redirect to={`/profile/${props.authUserId}`} />\r\n\t) : (\r\n\t\t<div className={styles.loginContainer}>\r\n\t\t\t<div className={styles.greeting}>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tWelcome! For future use, enter the following data for authorization:\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tEmail: <mark>free@samuraijs.com</mark>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tPassword: <mark>free</mark>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<LoginForm\r\n\t\t\t\trefreshImg={refreshImg}\r\n\t\t\t\tcaptchaUrl={props.captchaUrl}\r\n\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\tgetCaptcha={props.getCaptcha}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuth: state.auth.isAuth,\r\n\tauthUserId: state.auth.userId,\r\n\tcaptchaUrl: state.auth.captchaUrl,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n\tsignIn,\r\n\tgetAuthUserData,\r\n\tgetCaptcha,\r\n})(Login);\r\n"],"sourceRoot":""}