{"version":3,"sources":["components/Main/Login/LoginForm.js","components/Main/Login/Login.js","../node_modules/react-final-form/dist/react-final-form.es.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/common/FormControls/FormControls.js","utilities/validators/validators.js","components/Main/Login/Login.module.scss","assets/image/refresh.svg"],"names":["LoginForm","props","initialValues","rememberMe","passwordShown","onSubmit","email","password","captcha","render","handleSubmit","pristine","form","submitting","submitError","values","loading","Preloader","className","styles","textInputWrap","name","component","Input","placeholder","validate","fullValidation","type","captchaUrl","captchaImg","onClick","getCaptcha","src","refreshImg","alt","required","buttons","disabled","reset","error","connect","state","isAuth","auth","authUserId","userId","signIn","getAuthUserData","useState","setLoading","a","FORM_ERROR","to","loginContainer","greeting","renderComponent","lazyProps","children","rest","_objectWithoutPropertiesLoose","createElement","Object","assign","undefined","Error","useWhenValueChanges","value","callback","isEqual","b","previous","React__default","useRef","useEffect","current","shallowEqual","keysA","keys","keysB","length","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","key","isSyntheticEvent","candidate","stopPropagation","ReactFinalFormContext","createContext","useLatest","ref","addLazyState","dest","forEach","defineProperty","get","enumerable","addLazyFormState","versions","version$1","all","formSubscriptionItems","reduce","result","ReactFinalForm","_ref","debug","decorators","destroyOnUnregister","alternateFormApi","initialValuesEqual","keepDirtyOnReinitialize","mutators","_ref$subscription","subscription","validateOnBlur","config","init","useConstant","f","createForm","pauseValidation","_React$useState","initialState","subscribe","setState","stateRef","isValidationPaused","resumeValidation","unsubscriptions","s","concat","map","decorator","reverse","unsubscribe","setConfig","renderProps","_extends","eventOrValues","event","preventDefault","submit","Provider","__versions","useForm","componentName","useContext","isReactNative","window","navigator","product","all$1","fieldSubscriptionItems","defaultFormat","defaultParse","defaultIsEqual","useField","_config","afterSubmit","allowNull","data","defaultValue","_config$format","format","formatOnBlur","initialValue","multiple","_config$parse","parse","_config$subscription","validateFields","_value","configRef","register","silent","registerField","beforeSubmit","_configRef$current","_configRef$current$fo","getFieldState","formatted","change","getValidator","firstRender","handlers","onBlur","useCallback","blur","fieldState","onChange","target","currentValue","valueProp","nativeEvent","text","_detypedEvent$target","checked","Array","isArray","index","indexOf","slice","options","option","selected","push","getSelectedValues","getValue","onFocus","focus","meta","addLazyFieldMetaState","input","Field","forwardRef","field","_objectWithoutProperties","source","excluded","i","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","FormControl","Element","element","autoFocus","maxLength","touched","Textarea","message","min","max","mess","validators","validator","composeValidators","minLength","module","exports"],"mappings":"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","file":"static/js/4.96d2cfb6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Field, Form } from 'react-final-form';\r\nimport {\r\n\tfullValidation,\r\n\trequired,\r\n} from '../../../utilities/validators/validators';\r\nimport { Input } from '../../common/FormControls/FormControls';\r\nimport styles from './Login.module.scss';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\n\r\nconst LoginForm = (props) => (\r\n\t<Form\r\n\t\tinitialValues={{\r\n\t\t\trememberMe: true,\r\n\t\t\tpasswordShown: false,\r\n\t\t}}\r\n\t\tonSubmit={({ email, password, rememberMe, captcha }) =>\r\n\t\t\tprops.onSubmit({ email, password, rememberMe, captcha })\r\n\t\t}\r\n\t\trender={({\r\n\t\t\thandleSubmit,\r\n\t\t\tpristine,\r\n\t\t\tform,\r\n\t\t\tsubmitting,\r\n\t\t\tsubmitError,\r\n\t\t\tvalues,\r\n\t\t}) => (\r\n\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t{props.loading && <Preloader />}\r\n\t\t\t\t<div className={styles.textInputWrap}>\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\tcomponent={Input}\r\n\t\t\t\t\t\tplaceholder='Enter your email'\r\n\t\t\t\t\t\tvalidate={fullValidation(3, 30, 'Required field')}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.textInputWrap}>\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\tcomponent={Input}\r\n\t\t\t\t\t\ttype={values.passwordShown ? 'text' : 'password'}\r\n\t\t\t\t\t\tplaceholder='Enter your password'\r\n\t\t\t\t\t\tvalidate={fullValidation(3, 30, 'Required field')}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\t<Field type='checkbox' component='input' name='passwordShown' />{' '}\r\n\t\t\t\t\t\tShow password\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\t<Field type='checkbox' component='input' name='rememberMe' />{' '}\r\n\t\t\t\t\t\tRemember me\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t{props.captchaUrl && (\r\n\t\t\t\t\t<div className={styles.captcha}>\r\n\t\t\t\t\t\t<div className={styles.captchaImg}>\r\n\t\t\t\t\t\t\t<button type='button' onClick={props.getCaptcha}>\r\n\t\t\t\t\t\t\t\t<img src={props.refreshImg} alt='' />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<img src={props.captchaUrl} alt='Captcha' />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.textInputWrap}>\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tcomponent={Input}\r\n\t\t\t\t\t\t\t\tname='captcha'\r\n\t\t\t\t\t\t\t\tvalidate={required('Requred field')}\r\n\t\t\t\t\t\t\t\tplaceholder='Type the characters above'\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t<div className={styles.buttons}>\r\n\t\t\t\t\t<button type='submit' disabled={submitting}>\r\n\t\t\t\t\t\tLog in\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tdisabled={pristine || submitting}\r\n\t\t\t\t\t\tonClick={form.reset}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tClear\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={styles.error}>{submitError && submitError}</div>\r\n\t\t\t</form>\r\n\t\t)}\r\n\t/>\r\n);\r\n\r\nexport default LoginForm;\r\n","import { FORM_ERROR } from 'final-form';\r\nimport React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {\r\n\tgetAuthUserData,\r\n\tsignIn,\r\n\tgetCaptcha,\r\n} from '../../../redux/reducers/authReducer';\r\nimport styles from './Login.module.scss';\r\nimport LoginForm from './LoginForm';\r\nimport refreshImg from '../../../assets/image/refresh.svg';\r\n\r\nconst Login = (props) => {\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst onSubmit = async (values) => {\r\n\t\tsetLoading(true);\r\n\t\tconst error = await props.signIn(values);\r\n\t\tsetLoading(false);\r\n\t\tif (error) {\r\n\t\t\treturn { [FORM_ERROR]: error };\r\n\t\t}\r\n\t};\r\n\r\n\treturn props.isAuth ? (\r\n\t\t<Redirect to={`/profile/${props.authUserId}`} />\r\n\t) : (\r\n\t\t<div className={styles.loginContainer}>\r\n\t\t\t<div className={styles.greeting}>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tWelcome! For future use, enter the following data for authorization:\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tEmail: <mark>free@samuraijs.com</mark>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tPassword: <mark>free</mark>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<LoginForm\r\n\t\t\t\trefreshImg={refreshImg}\r\n\t\t\t\tcaptchaUrl={props.captchaUrl}\r\n\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t\tloading={loading}\r\n\t\t\t\tgetCaptcha={props.getCaptcha}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuth: state.auth.isAuth,\r\n\tauthUserId: state.auth.userId,\r\n\tcaptchaUrl: state.auth.captchaUrl,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n\tsignIn,\r\n\tgetAuthUserData,\r\n\tgetCaptcha,\r\n})(Login);\r\n","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport React__default, { createElement, createContext, useState, useEffect, useContext, useRef, useCallback, forwardRef } from 'react';\nimport { formSubscriptionItems, createForm, version as version$1, fieldSubscriptionItems } from 'final-form';\n\n// shared logic between components that use either render prop,\n// children render function, or component prop\nfunction renderComponent(props, lazyProps, name) {\n  var render = props.render,\n      children = props.children,\n      component = props.component,\n      rest = _objectWithoutPropertiesLoose(props, [\"render\", \"children\", \"component\"]);\n\n  if (component) {\n    return /*#__PURE__*/createElement(component, Object.assign(lazyProps, rest, {\n      children: children,\n      render: render\n    }));\n  }\n\n  if (render) {\n    return render(children === undefined ? Object.assign(lazyProps, rest) : // inject children back in\n    Object.assign(lazyProps, rest, {\n      children: children\n    }));\n  }\n\n  if (typeof children !== 'function') {\n    throw new Error(\"Must specify either a render prop, a render function as children, or a component prop to \" + name);\n  }\n\n  return children(Object.assign(lazyProps, rest));\n}\n\nfunction useWhenValueChanges(value, callback, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = function isEqual(a, b) {\n      return a === b;\n    };\n  }\n\n  var previous = React__default.useRef(value);\n  React__default.useEffect(function () {\n    if (!isEqual(value, previous.current)) {\n      callback();\n      previous.current = value;\n    }\n  });\n}\n\n/**\n * A simple hook to create a constant value that lives for\n * the lifetime of the component.\n *\n * Plagiarized from https://github.com/Andarist/use-constant\n *\n * Do NOT reuse this code unless you know what you're doing.\n * Use Andarist's hook; it's more fault tolerant to things like\n * falsy values.\n *\n * @param {Function} init - A function to generate the value\n */\n\nfunction useConstant(init) {\n  var ref = React__default.useRef();\n\n  if (!ref.current) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nvar shallowEqual = function shallowEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== 'object' || !a || typeof b !== 'object' || !b) {\n    return false;\n  }\n\n  var keysA = Object.keys(a);\n  var keysB = Object.keys(b);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(b);\n\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key) || a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar isSyntheticEvent = function isSyntheticEvent(candidate) {\n  return !!(candidate && typeof candidate.stopPropagation === 'function');\n};\n\nvar ReactFinalFormContext = createContext();\n\nfunction useLatest(value) {\n  var ref = React__default.useRef(value);\n  React__default.useEffect(function () {\n    ref.current = value;\n  });\n  return ref;\n}\n\nvar version = \"6.5.0\";\n\nvar addLazyState = function addLazyState(dest, state, keys) {\n  keys.forEach(function (key) {\n    Object.defineProperty(dest, key, {\n      get: function get() {\n        return state[key];\n      },\n      enumerable: true\n    });\n  });\n};\n\nvar addLazyFormState = function addLazyFormState(dest, state) {\n  return addLazyState(dest, state, ['active', 'dirty', 'dirtyFields', 'dirtySinceLastSubmit', 'dirtyFieldsSinceLastSubmit', 'error', 'errors', 'hasSubmitErrors', 'hasValidationErrors', 'initialValues', 'invalid', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitError', 'submitErrors', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'validating', 'values', 'visited']);\n};\nvar addLazyFieldMetaState = function addLazyFieldMetaState(dest, state) {\n  return addLazyState(dest, state, ['active', 'data', 'dirty', 'dirtySinceLastSubmit', 'error', 'initial', 'invalid', 'length', 'modified', 'modifiedSinceLastSubmit', 'pristine', 'submitError', 'submitFailed', 'submitSucceeded', 'submitting', 'touched', 'valid', 'validating', 'visited']);\n};\n\nvar versions = {\n  'final-form': version$1,\n  'react-final-form': version\n};\nvar all = formSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nfunction ReactFinalForm(_ref) {\n  var debug = _ref.debug,\n      decorators = _ref.decorators,\n      destroyOnUnregister = _ref.destroyOnUnregister,\n      alternateFormApi = _ref.form,\n      initialValues = _ref.initialValues,\n      initialValuesEqual = _ref.initialValuesEqual,\n      keepDirtyOnReinitialize = _ref.keepDirtyOnReinitialize,\n      mutators = _ref.mutators,\n      onSubmit = _ref.onSubmit,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all : _ref$subscription,\n      validate = _ref.validate,\n      validateOnBlur = _ref.validateOnBlur,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"debug\", \"decorators\", \"destroyOnUnregister\", \"form\", \"initialValues\", \"initialValuesEqual\", \"keepDirtyOnReinitialize\", \"mutators\", \"onSubmit\", \"subscription\", \"validate\", \"validateOnBlur\"]);\n\n  var config = {\n    debug: debug,\n    destroyOnUnregister: destroyOnUnregister,\n    initialValues: initialValues,\n    keepDirtyOnReinitialize: keepDirtyOnReinitialize,\n    mutators: mutators,\n    onSubmit: onSubmit,\n    validate: validate,\n    validateOnBlur: validateOnBlur\n  };\n  var form = useConstant(function () {\n    var f = alternateFormApi || createForm(config); // pause validation until children register all fields on first render (unpaused in useEffect() below)\n\n    f.pauseValidation();\n    return f;\n  }); // synchronously register and unregister to query form state for our subscription on first render\n\n  var _React$useState = useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1]; // save a copy of state that can break through the closure\n  // on the shallowEqual() line below.\n\n\n  var stateRef = useLatest(state);\n  useEffect(function () {\n    // We have rendered, so all fields are now registered, so we can unpause validation\n    form.isValidationPaused() && form.resumeValidation();\n    var unsubscriptions = [form.subscribe(function (s) {\n      if (!shallowEqual(s, stateRef.current)) {\n        setState(s);\n      }\n    }, subscription)].concat(decorators ? decorators.map(function (decorator) {\n      return (// this noop ternary is to appease the flow gods\n        // istanbul ignore next\n        decorator(form)\n      );\n    }) : []);\n    return function () {\n      form.pauseValidation(); // pause validation so we don't revalidate on every field deregistration\n\n      unsubscriptions.reverse().forEach(function (unsubscribe) {\n        return unsubscribe();\n      }); // don't need to resume validation here; either unmounting, or will re-run this hook with new deps\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [decorators]); // warn about decorator changes\n  // istanbul ignore next\n\n  if (process.env.NODE_ENV !== 'production') {\n    // You're never supposed to use hooks inside a conditional, but in this\n    // case we can be certain that you're not going to be changing your\n    // NODE_ENV between renders, so this is safe.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useWhenValueChanges(decorators, function () {\n      console.error('Form decorators should not change from one render to the next as new values will be ignored');\n    }, shallowEqual);\n  } // allow updatable config\n\n\n  useWhenValueChanges(debug, function () {\n    form.setConfig('debug', debug);\n  });\n  useWhenValueChanges(destroyOnUnregister, function () {\n    form.destroyOnUnregister = !!destroyOnUnregister;\n  });\n  useWhenValueChanges(keepDirtyOnReinitialize, function () {\n    form.setConfig('keepDirtyOnReinitialize', keepDirtyOnReinitialize);\n  });\n  useWhenValueChanges(initialValues, function () {\n    form.setConfig('initialValues', initialValues);\n  }, initialValuesEqual || shallowEqual);\n  useWhenValueChanges(mutators, function () {\n    form.setConfig('mutators', mutators);\n  });\n  useWhenValueChanges(onSubmit, function () {\n    form.setConfig('onSubmit', onSubmit);\n  });\n  useWhenValueChanges(validate, function () {\n    form.setConfig('validate', validate);\n  });\n  useWhenValueChanges(validateOnBlur, function () {\n    form.setConfig('validateOnBlur', validateOnBlur);\n  });\n\n  var handleSubmit = function handleSubmit(event) {\n    if (event) {\n      // sometimes not true, e.g. React Native\n      if (typeof event.preventDefault === 'function') {\n        event.preventDefault();\n      }\n\n      if (typeof event.stopPropagation === 'function') {\n        // prevent any outer forms from receiving the event too\n        event.stopPropagation();\n      }\n    }\n\n    return form.submit();\n  };\n\n  var renderProps = {\n    form: _extends({}, form, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          form.reset();\n        } else {\n          form.reset(eventOrValues);\n        }\n      }\n    }),\n    handleSubmit: handleSubmit\n  };\n  addLazyFormState(renderProps, state);\n  return /*#__PURE__*/createElement(ReactFinalFormContext.Provider, {\n    value: form\n  }, renderComponent(_extends({}, rest, {\n    __versions: versions\n  }), renderProps, 'ReactFinalForm'));\n}\n\nfunction useForm(componentName) {\n  var form = useContext(ReactFinalFormContext);\n\n  if (!form) {\n    throw new Error((componentName || 'useForm') + \" must be used inside of a <Form> component\");\n  }\n\n  return form;\n}\n\nfunction useFormState(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      onChange = _ref.onChange,\n      _ref$subscription = _ref.subscription,\n      subscription = _ref$subscription === void 0 ? all : _ref$subscription;\n\n  var form = useForm('useFormState');\n  var firstRender = useRef(true);\n  var onChangeRef = useRef(onChange);\n  onChangeRef.current = onChange; // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = useState(function () {\n    var initialState = {};\n    form.subscribe(function (state) {\n      initialState = state;\n    }, subscription)();\n\n    if (onChange) {\n      onChange(initialState);\n    }\n\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  useEffect(function () {\n    return form.subscribe(function (newState) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(newState);\n\n        if (onChangeRef.current) {\n          onChangeRef.current(newState);\n        }\n      }\n    }, subscription);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  var lazyState = {};\n  addLazyFormState(lazyState, state);\n  return lazyState;\n}\n\nfunction FormSpy(_ref) {\n  var onChange = _ref.onChange,\n      subscription = _ref.subscription,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"onChange\", \"subscription\"]);\n\n  var reactFinalForm = useForm('FormSpy');\n  var state = useFormState({\n    onChange: onChange,\n    subscription: subscription\n  });\n\n  if (onChange) {\n    return null;\n  }\n\n  var renderProps = {\n    form: _extends({}, reactFinalForm, {\n      reset: function reset(eventOrValues) {\n        if (isSyntheticEvent(eventOrValues)) {\n          // it's a React SyntheticEvent, call reset with no arguments\n          reactFinalForm.reset();\n        } else {\n          reactFinalForm.reset(eventOrValues);\n        }\n      }\n    })\n  };\n  return renderComponent(_extends({}, rest, renderProps), state, 'FormSpy');\n}\n\nvar isReactNative = typeof window !== 'undefined' && window.navigator && window.navigator.product && window.navigator.product === 'ReactNative';\n\nvar getSelectedValues = function getSelectedValues(options) {\n  var result = [];\n\n  if (options) {\n    for (var index = 0; index < options.length; index++) {\n      var option = options[index];\n\n      if (option.selected) {\n        result.push(option.value);\n      }\n    }\n  }\n\n  return result;\n};\n\nvar getValue = function getValue(event, currentValue, valueProp, isReactNative) {\n  if (!isReactNative && event.nativeEvent && event.nativeEvent.text !== undefined) {\n    return event.nativeEvent.text;\n  }\n\n  if (isReactNative && event.nativeEvent) {\n    return event.nativeEvent.text;\n  }\n\n  var detypedEvent = event;\n  var _detypedEvent$target = detypedEvent.target,\n      type = _detypedEvent$target.type,\n      value = _detypedEvent$target.value,\n      checked = _detypedEvent$target.checked;\n\n  switch (type) {\n    case 'checkbox':\n      if (valueProp !== undefined) {\n        // we are maintaining an array, not just a boolean\n        if (checked) {\n          // add value to current array value\n          return Array.isArray(currentValue) ? currentValue.concat(valueProp) : [valueProp];\n        } else {\n          // remove value from current array value\n          if (!Array.isArray(currentValue)) {\n            return currentValue;\n          }\n\n          var index = currentValue.indexOf(valueProp);\n\n          if (index < 0) {\n            return currentValue;\n          } else {\n            return currentValue.slice(0, index).concat(currentValue.slice(index + 1));\n          }\n        }\n      } else {\n        // it's just a boolean\n        return !!checked;\n      }\n\n    case 'select-multiple':\n      return getSelectedValues(event.target.options);\n\n    default:\n      return value;\n  }\n};\n\nvar all$1 = fieldSubscriptionItems.reduce(function (result, key) {\n  result[key] = true;\n  return result;\n}, {});\n\nvar defaultFormat = function defaultFormat(value, name) {\n  return value === undefined ? '' : value;\n};\n\nvar defaultParse = function defaultParse(value, name) {\n  return value === '' ? undefined : value;\n};\n\nvar defaultIsEqual = function defaultIsEqual(a, b) {\n  return a === b;\n};\n\nfunction useField(name, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var _config = config,\n      afterSubmit = _config.afterSubmit,\n      allowNull = _config.allowNull,\n      component = _config.component,\n      data = _config.data,\n      defaultValue = _config.defaultValue,\n      _config$format = _config.format,\n      format = _config$format === void 0 ? defaultFormat : _config$format,\n      formatOnBlur = _config.formatOnBlur,\n      initialValue = _config.initialValue,\n      multiple = _config.multiple,\n      _config$parse = _config.parse,\n      parse = _config$parse === void 0 ? defaultParse : _config$parse,\n      _config$subscription = _config.subscription,\n      subscription = _config$subscription === void 0 ? all$1 : _config$subscription,\n      type = _config.type,\n      validateFields = _config.validateFields,\n      _value = _config.value;\n  var form = useForm('useField');\n  var configRef = useLatest(config);\n\n  var register = function register(callback, silent) {\n    return (// avoid using `state` const in any closures created inside `register`\n      // because they would refer `state` from current execution context\n      // whereas actual `state` would defined in the subsequent `useField` hook\n      // execution\n      // (that would be caused by `setState` call performed in `register` callback)\n      form.registerField(name, callback, subscription, {\n        afterSubmit: afterSubmit,\n        beforeSubmit: function beforeSubmit() {\n          var _configRef$current = configRef.current,\n              beforeSubmit = _configRef$current.beforeSubmit,\n              formatOnBlur = _configRef$current.formatOnBlur,\n              _configRef$current$fo = _configRef$current.format,\n              format = _configRef$current$fo === void 0 ? defaultFormat : _configRef$current$fo;\n\n          if (formatOnBlur) {\n            var _ref = form.getFieldState(name),\n                value = _ref.value;\n\n            var formatted = format(value, name);\n\n            if (formatted !== value) {\n              form.change(name, formatted);\n            }\n          }\n\n          return beforeSubmit && beforeSubmit();\n        },\n        data: data,\n        defaultValue: defaultValue,\n        getValidator: function getValidator() {\n          return configRef.current.validate;\n        },\n        initialValue: initialValue,\n        isEqual: function isEqual(a, b) {\n          return (configRef.current.isEqual || defaultIsEqual)(a, b);\n        },\n        silent: silent,\n        validateFields: validateFields\n      })\n    );\n  };\n\n  var firstRender = useRef(true); // synchronously register and unregister to query field state for our subscription on first render\n\n  var _React$useState = useState(function () {\n    var initialState = {}; // temporarily disable destroyOnUnregister\n\n    var destroyOnUnregister = form.destroyOnUnregister;\n    form.destroyOnUnregister = false;\n    register(function (state) {\n      initialState = state;\n    }, true)(); // return destroyOnUnregister to its original value\n\n    form.destroyOnUnregister = destroyOnUnregister;\n    return initialState;\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  useEffect(function () {\n    return register(function (state) {\n      if (firstRender.current) {\n        firstRender.current = false;\n      } else {\n        setState(state);\n      }\n    }, false);\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  [name, data, defaultValue, // If we want to allow inline fat-arrow field-level validation functions, we\n  // cannot reregister field every time validate function !==.\n  // validate,\n  initialValue // The validateFields array is often passed as validateFields={[]}, creating\n  // a !== new array every time. If it needs to be changed, a rerender/reregister\n  // can be forced by changing the key prop\n  // validateFields\n  ]);\n  var handlers = {\n    onBlur: useCallback(function (event) {\n      state.blur();\n\n      if (formatOnBlur) {\n        /**\n         * Here we must fetch the value directly from Final Form because we cannot\n         * trust that our `state` closure has the most recent value. This is a problem\n         * if-and-only-if the library consumer has called `onChange()` immediately\n         * before calling `onBlur()`, but before the field has had a chance to receive\n         * the value update from Final Form.\n         */\n        var fieldState = form.getFieldState(state.name);\n        state.change(format(fieldState.value, state.name));\n      }\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [state.name, format, formatOnBlur]),\n    onChange: useCallback(function (event) {\n      // istanbul ignore next\n      if (process.env.NODE_ENV !== 'production' && event && event.target) {\n        var targetType = event.target.type;\n        var unknown = ~['checkbox', 'radio', 'select-multiple'].indexOf(targetType) && !type && component !== 'select';\n\n        var _value2 = targetType === 'select-multiple' ? state.value : _value;\n\n        if (unknown) {\n          console.error(\"You must pass `type=\\\"\" + (targetType === 'select-multiple' ? 'select' : targetType) + \"\\\"` prop to your Field(\" + name + \") component.\\n\" + (\"Without it we don't know how to unpack your `value` prop - \" + (Array.isArray(_value2) ? \"[\" + _value2 + \"]\" : \"\\\"\" + _value2 + \"\\\"\") + \".\"));\n        }\n      }\n\n      var value = event && event.target ? getValue(event, state.value, _value, isReactNative) : event;\n      state.change(parse(value, name));\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [_value, name, parse, state.change, state.value, type]),\n    onFocus: useCallback(function (event) {\n      state.focus(); // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n  };\n  var meta = {};\n  addLazyFieldMetaState(meta, state);\n\n  var input = _extends({\n    name: name,\n\n    get value() {\n      var value = state.value;\n\n      if (formatOnBlur) {\n        if (component === 'input') {\n          value = defaultFormat(value);\n        }\n      } else {\n        value = format(value, name);\n      }\n\n      if (value === null && !allowNull) {\n        value = '';\n      }\n\n      if (type === 'checkbox' || type === 'radio') {\n        return _value;\n      } else if (component === 'select' && multiple) {\n        return value || [];\n      }\n\n      return value;\n    },\n\n    get checked() {\n      if (type === 'checkbox') {\n        if (_value === undefined) {\n          return !!state.value;\n        } else {\n          return !!(Array.isArray(state.value) && ~state.value.indexOf(_value));\n        }\n      } else if (type === 'radio') {\n        return state.value === _value;\n      }\n\n      return undefined;\n    }\n\n  }, handlers);\n\n  if (multiple) {\n    input.multiple = multiple;\n  }\n\n  if (type !== undefined) {\n    input.type = type;\n  }\n\n  var renderProps = {\n    input: input,\n    meta: meta\n  }; // assign to force Flow check\n\n  return renderProps;\n}\n\nvar Field = /*#__PURE__*/forwardRef(function Field(_ref, ref) {\n  var afterSubmit = _ref.afterSubmit,\n      allowNull = _ref.allowNull,\n      beforeSubmit = _ref.beforeSubmit,\n      children = _ref.children,\n      component = _ref.component,\n      data = _ref.data,\n      defaultValue = _ref.defaultValue,\n      format = _ref.format,\n      formatOnBlur = _ref.formatOnBlur,\n      initialValue = _ref.initialValue,\n      isEqual = _ref.isEqual,\n      multiple = _ref.multiple,\n      name = _ref.name,\n      parse = _ref.parse,\n      subscription = _ref.subscription,\n      type = _ref.type,\n      validate = _ref.validate,\n      validateFields = _ref.validateFields,\n      value = _ref.value,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"afterSubmit\", \"allowNull\", \"beforeSubmit\", \"children\", \"component\", \"data\", \"defaultValue\", \"format\", \"formatOnBlur\", \"initialValue\", \"isEqual\", \"multiple\", \"name\", \"parse\", \"subscription\", \"type\", \"validate\", \"validateFields\", \"value\"]);\n\n  var field = useField(name, {\n    afterSubmit: afterSubmit,\n    allowNull: allowNull,\n    beforeSubmit: beforeSubmit,\n    children: children,\n    component: component,\n    data: data,\n    defaultValue: defaultValue,\n    format: format,\n    formatOnBlur: formatOnBlur,\n    initialValue: initialValue,\n    isEqual: isEqual,\n    multiple: multiple,\n    parse: parse,\n    subscription: subscription,\n    type: type,\n    validate: validate,\n    validateFields: validateFields,\n    value: value\n  });\n\n  if (typeof children === 'function') {\n    return children(_extends({}, field, rest));\n  }\n\n  if (typeof component === 'string') {\n    // ignore meta, combine input with any other props\n    return /*#__PURE__*/createElement(component, _extends({}, field.input, {\n      children: children,\n      ref: ref\n    }, rest));\n  }\n\n  if (!name) {\n    throw new Error('prop name cannot be undefined in <Field> component');\n  }\n\n  return renderComponent(_extends({\n    children: children,\n    component: component,\n    ref: ref\n  }, rest), field, \"Field(\" + name + \")\");\n});\n\nfunction withTypes() {\n  return {\n    Form: ReactFinalForm,\n    FormSpy: FormSpy\n  };\n}\n\nexport { Field, ReactFinalForm as Form, FormSpy, useField, useForm, useFormState, version, withTypes };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\r\n\r\n// Компонент возвращающий поле для ввода, применяется в Field\r\n// Принимает данные ввода и мета-данные (ошибки и тд.)\r\nconst FormControl = ({ input, meta, ...props }) => {\r\n\t// Принимает в пропсах нужное поле ввода (input, textarea...)\r\n\tconst Element = props.element;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* Создание поля ввода и передача в него данных */}\r\n\t\t\t<Element\r\n\t\t\t\t{...input}\r\n\t\t\t\tplaceholder={props.placeholder}\r\n\t\t\t\tautoFocus={props.autoFocus}\r\n\t\t\t\tmaxLength={props.maxLength}\r\n\t\t\t/>\r\n\t\t\t{/* Вывод на основании ошибок валидации */}\r\n\t\t\t{(meta.submitError || meta.error) &&\r\n\t\t\t\t// Если есть ошибка и введено больше 5 символов, выводит ошибку\r\n\t\t\t\t(input.value.length > 5 ? (\r\n\t\t\t\t\t<span>{meta.submitError || meta.error}</span>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t// Если есть ошибка, но символов меньше 5, выводит ошибку когда поле было затронуто\r\n\t\t\t\t\tmeta.touched && <span>{meta.submitError || meta.error}</span>\r\n\t\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n// Компоненты для создания конкретных полей ввода\r\nexport const Input = (props) => {\r\n\treturn <FormControl element='input' {...props} />;\r\n};\r\nexport const Textarea = (props) => (\r\n\t<FormControl element='textarea' {...props} />\r\n);\r\n","export const required = (message) => (value) => (value ? undefined : message);\r\n\r\nexport const maxLength = (max) => (value) =>\r\n\tvalue && value.length > max ? `Max length is ${max} symbols` : undefined;\r\n\r\nconst minLength = (min) => (value) =>\r\n\tvalue && value.length < min ? `Min length is ${min} symbols` : undefined;\r\n\r\nconst composeValidators = (...validators) => (value) =>\r\n\tvalidators.reduce((error, validator) => error || validator(value), undefined);\r\n\r\nexport const fullValidation = (min, max, mess) =>\r\n\tcomposeValidators(minLength(min), maxLength(max), required(mess));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginContainer\":\"Login_loginContainer__3equC\",\"greeting\":\"Login_greeting__12QKJ\",\"textInputWrap\":\"Login_textInputWrap__29_sN\",\"captcha\":\"Login_captcha__e5Agc\",\"captchaImg\":\"Login_captchaImg__nBeoh\",\"buttons\":\"Login_buttons__5xyr1\",\"error\":\"Login_error__PSmDI\"};","module.exports = __webpack_public_path__ + \"static/media/refresh.8c6e329c.svg\";"],"sourceRoot":""}