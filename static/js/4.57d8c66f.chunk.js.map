{"version":3,"sources":["components/Main/Profile/ProfileStatus.js","components/Main/Profile/PageInfoWrap.js","components/Main/Profile/NewPostBlock.js","components/Main/Profile/ExistingPostsBlock.js","components/Main/Profile/Profile.js","components/Main/Profile/ProfileContainer.js","components/Main/Profile/Profile.module.scss","utilities/validators/validators.js","components/common/FormControls/FormControls.js","assets/image/les_tuman_derevia.jpg"],"names":["React","memo","status","updateUserStatus","isMyProfile","useState","editMode","setEditMode","statusInState","setStatusInState","useEffect","className","styles","onChange","e","currentTarget","value","autoFocus","onBlur","onDoubleClick","undefined","title","myStatus","enterStatus","ContactsItems","item","titleItem","contactsItem","PageInfoWrap","profile","defaultAvatar","Preloader","contacts","photos","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","facebook","website","vk","twitter","instagram","github","mainLink","youtube","pageWrap","avatar","src","large","alt","pageInfoWrap","pageName","pageInfo","leftBlock","pageInfoRow","rightBlock","contactsTitle","props","onSubmit","values","form","addPost","newPostInput","setTimeout","restart","render","handleSubmit","newPostBlock","name","component","Input","validate","fullValidation","placeholder","buttonWrap","type","existingPostsBlock","posts","map","el","key","id","post","textPost","likes","amountLikes","reverse","topImage","existingPosts","contentBlockWrapper","contentBlock","postsBlock","mapDispatchToProps","getAuthUserData","getProfile","compose","connect","state","profilePage","isAuth","auth","authUserId","userId","withRouter","match","params","userIdInAddressBar","setIsMyProfile","to","module","exports","min","max","mess","validators","reduce","error","validator","composeValidators","length","minLength","maxLength","message","FormControl","input","meta","Element","element","touched","Textarea"],"mappings":"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","file":"static/js/4.57d8c66f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styles from './Profile.module.scss';\r\n\r\nconst ProfileStatus = ({ status, updateUserStatus, isMyProfile }) => {\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst [statusInState, setStatusInState] = useState(status);\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true);\r\n\t};\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false);\r\n\t\tupdateUserStatus(statusInState);\r\n\t};\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatusInState(e.currentTarget.value);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tsetStatusInState(status);\r\n\t}, [status]);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{editMode ? (\r\n\t\t\t\t<div className={styles.status}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tonChange={onStatusChange}\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\tonBlur={deactivateEditMode}\r\n\t\t\t\t\t\tvalue={statusInState}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t) : status || isMyProfile ? (\r\n\t\t\t\t<div className={styles.status}>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tonDoubleClick={isMyProfile ? activateEditMode : undefined}\r\n\t\t\t\t\t\ttitle={isMyProfile ? 'Double click to change your status' : ''}\r\n\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\tisMyProfile ? (status ? styles.myStatus : styles.enterStatus) : ''\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{status || 'Enter your status...'}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t) : undefined}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default React.memo(ProfileStatus);\r\n","import React from 'react';\r\nimport styles from './Profile.module.scss';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\nconst ContactsItems = ({ item, titleItem }) =>\r\n\titem ? (\r\n\t\t<div className={styles.contactsItem}>\r\n\t\t\t<span>{titleItem}</span> {item}\r\n\t\t</div>\r\n\t) : (\r\n\t\t''\r\n\t);\r\n\r\nconst PageInfoWrap = ({\r\n\tprofile,\r\n\tdefaultAvatar,\r\n\tisMyProfile,\r\n\tstatus,\r\n\tupdateUserStatus,\r\n}) => {\r\n\tif (!profile) {\r\n\t\treturn <Preloader />;\r\n\t}\r\n\r\n\tconst {\r\n\t\tcontacts,\r\n\t\tphotos,\r\n\t\tfullName,\r\n\t\taboutMe,\r\n\t\tlookingForAJob,\r\n\t\tlookingForAJobDescription,\r\n\t} = profile;\r\n\tconst {\r\n\t\tfacebook,\r\n\t\twebsite,\r\n\t\tvk,\r\n\t\ttwitter,\r\n\t\tinstagram,\r\n\t\tgithub,\r\n\t\tmainLink,\r\n\t\tyoutube,\r\n\t} = contacts;\r\n\r\n\treturn (\r\n\t\t<div className={styles.pageWrap}>\r\n\t\t\t<div className={styles.avatar}>\r\n\t\t\t\t<img src={photos.large || defaultAvatar} alt=\"avatar\" />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.pageInfoWrap}>\r\n\t\t\t\t<div className={styles.pageName}>{fullName}</div>\r\n\t\t\t\t<ProfileStatus\r\n\t\t\t\t\tisMyProfile={isMyProfile}\r\n\t\t\t\t\tstatus={status}\r\n\t\t\t\t\tupdateUserStatus={updateUserStatus}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className={styles.pageInfo}>\r\n\t\t\t\t\t<div className={styles.leftBlock}>\r\n\t\t\t\t\t\t{aboutMe ? (\r\n\t\t\t\t\t\t\t<div className={styles.pageInfoRow}>\r\n\t\t\t\t\t\t\t\t<span>About me:</span> {aboutMe}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<div className={styles.pageInfoRow}>\r\n\t\t\t\t\t\t\t<span>Looking for a job:</span> {lookingForAJob ? 'Yes' : 'No'}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{lookingForAJobDescription ? (\r\n\t\t\t\t\t\t\t<div className={styles.pageInfoRow}>\r\n\t\t\t\t\t\t\t\t{lookingForAJobDescription}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{facebook ||\r\n\t\t\t\t\twebsite ||\r\n\t\t\t\t\tvk ||\r\n\t\t\t\t\ttwitter ||\r\n\t\t\t\t\tinstagram ||\r\n\t\t\t\t\tgithub ||\r\n\t\t\t\t\tmainLink ||\r\n\t\t\t\t\tyoutube ? (\r\n\t\t\t\t\t\t<div className={styles.rightBlock}>\r\n\t\t\t\t\t\t\t<div className={styles.contactsTitle}>Contacts:</div>\r\n\t\t\t\t\t\t\t{ContactsItems(facebook, 'Facebook:')}\r\n\t\t\t\t\t\t\t<ContactsItems item={facebook} titleItem={'Facebook:'} />\r\n\t\t\t\t\t\t\t<ContactsItems item={website} titleItem={'Website:'} />\r\n\t\t\t\t\t\t\t<ContactsItems item={vk} titleItem={'Vk:'} />\r\n\t\t\t\t\t\t\t<ContactsItems item={twitter} titleItem={'Twitter:'} />\r\n\t\t\t\t\t\t\t<ContactsItems item={instagram} titleItem={'Instagram:'} />\r\n\t\t\t\t\t\t\t<ContactsItems item={github} titleItem={'GitHub:'} />\r\n\t\t\t\t\t\t\t<ContactsItems item={mainLink} titleItem={'Main Link:'} />\r\n\t\t\t\t\t\t\t<ContactsItems item={youtube} titleItem={'YouTube:'} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t''\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PageInfoWrap;\r\n","import React from 'react';\r\nimport styles from './Profile.module.scss';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { fullValidation } from '../../../utilities/validators/validators';\r\nimport { Input } from '../../common/FormControls/FormControls';\r\n\r\nconst NewPostBlock = (props) => (\r\n\t<Form\r\n\t\tonSubmit={(values, form) => {\r\n\t\t\tprops.addPost(values.newPostInput);\r\n\t\t\tsetTimeout(form.restart);\r\n\t\t}}\r\n\t\trender={({ handleSubmit }) => (\r\n\t\t\t<form className={styles.newPostBlock} onSubmit={handleSubmit}>\r\n\t\t\t\t<Field\r\n\t\t\t\t\tname=\"newPostInput\"\r\n\t\t\t\t\tcomponent={Input}\r\n\t\t\t\t\tvalidate={fullValidation('', 1000, 'Enter the text of your message')}\r\n\t\t\t\t\tplaceholder={`What's up?`}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className={styles.buttonWrap}>\r\n\t\t\t\t\t<button type=\"submit\">Add post</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t)}\r\n\t/>\r\n);\r\n\r\nexport default React.memo(NewPostBlock);\r\n","import React from 'react';\r\nimport styles from './Profile.module.scss';\r\n\r\nconst ExistingPostsBlock = (props) => (\r\n\t<div className={styles.existingPostsBlock}>\r\n\t\t{props.posts.map((el) => (\r\n\t\t\t<div key={el.id} className={styles.post}>\r\n\t\t\t\t<div>{el.textPost}</div>\r\n\t\t\t\t<div className={styles.likes}>{el.amountLikes} likes</div>\r\n\t\t\t</div>\r\n\t\t)).reverse()}\r\n\t</div>\r\n);\r\n\r\nexport default React.memo(ExistingPostsBlock);\r\n","import React from 'react';\r\nimport styles from './Profile.module.scss';\r\nimport PageInfoWrap from './PageInfoWrap';\r\nimport NewPostBlock from './NewPostBlock';\r\nimport ExistingPostsBlock from './ExistingPostsBlock';\r\n\r\nconst Profile = ({\r\n\ttopImage,\r\n\tisMyProfile,\r\n\tprofile,\r\n\tdefaultAvatar,\r\n\tstatus,\r\n\tupdateUserStatus,\r\n\taddPost,\r\n\texistingPosts,\r\n}) => {\r\n\treturn (\r\n\t\t<div className={styles.profile}>\r\n\t\t\t<div className={styles.topImage}>\r\n\t\t\t\t<img src={topImage} alt=\"cover\" />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.contentBlockWrapper}>\r\n\t\t\t\t<div className={styles.contentBlock}>\r\n\t\t\t\t\t<PageInfoWrap\r\n\t\t\t\t\t\tisMyProfile={isMyProfile}\r\n\t\t\t\t\t\tprofile={profile}\r\n\t\t\t\t\t\tdefaultAvatar={defaultAvatar}\r\n\t\t\t\t\t\tstatus={status}\r\n\t\t\t\t\t\tupdateUserStatus={updateUserStatus}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className={styles.postsBlock}>\r\n\t\t\t\t\t\t<NewPostBlock addPost={addPost} />\r\n\t\t\t\t\t\t<ExistingPostsBlock posts={existingPosts} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default React.memo(Profile);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport defaultAvatar from '../../../assets/image/defaultAvatar.jpg';\r\nimport topImage from '../../../assets/image/les_tuman_derevia.jpg';\r\nimport { getAuthUserData } from '../../../redux/reducers/authReducer';\r\nimport {\r\n\taddPost,\r\n\tgetProfile,\r\n\tupdateUserStatus,\r\n} from '../../../redux/reducers/profileReducer';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport Profile from './Profile';\r\n\r\nconst ProfileContainer = (props) => {\r\n\tconst {\r\n\t\tmatch: {\r\n\t\t\tparams: { userId },\r\n\t\t},\r\n\t\tauthUserId,\r\n\t\tgetProfile,\r\n\t\tisAuth,\r\n\t\tprofile,\r\n\t} = props;\r\n\r\n\tconst userIdInAddressBar = +userId;\r\n\r\n\t// Индикатор профиля авторизованного пользователя\r\n\tconst [isMyProfile, setIsMyProfile] = useState(false);\r\n\r\n\t// Выполняется при первом рендере и после каждого изменения id в адресной строке\r\n\tuseEffect(() => {\r\n\t\t// Если в адресной строке есть id\r\n\t\tif (userIdInAddressBar) {\r\n\t\t\t// Если id авторизованного пользователя и id в адресной строке совпадает\r\n\t\t\t// Указывает, что это профиль пользователя\r\n\t\t\tif (authUserId === userIdInAddressBar) {\r\n\t\t\t\tsetIsMyProfile(true);\r\n\t\t\t}\r\n\t\t\t// Запрос данных пользователя\r\n\t\t\tgetProfile(userIdInAddressBar);\r\n\t\t}\r\n\t}, [userIdInAddressBar, authUserId, getProfile]);\r\n\r\n\t// Если пользователь выполнил выход\r\n\tuseEffect(() => {\r\n\t\tif (!isAuth) {\r\n\t\t\tsetIsMyProfile(false);\r\n\t\t}\r\n\t}, [isAuth]);\r\n\r\n\t// Если в адресной строке указан id\r\n\tif (userIdInAddressBar) {\r\n\t\treturn profile ? (\r\n\t\t\t// Если данные профиля получены\r\n\t\t\t<Profile {...props} isMyProfile={isMyProfile} />\r\n\t\t) : (\r\n\t\t\t// Если идет получение данных\r\n\t\t\t<Preloader />\r\n\t\t);\r\n\t} else {\r\n\t\t// Если в адресной строке не указан id\r\n\t\treturn isAuth ? (\r\n\t\t\t// Редирект на профиль авторизованного пользователя\r\n\t\t\t<Redirect to={`/profile/${authUserId}`} />\r\n\t\t) : (\r\n\t\t\t// Если не авторизован, редирект на страницу логинизации\r\n\t\t\t<Redirect to='/login' />\r\n\t\t);\r\n\t}\r\n};\r\n\r\n// Данные из state передаваемые в props компонента\r\nconst mapStateToProps = (state) => ({\r\n\ttopImage,\r\n\tdefaultAvatar,\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tisAuth: state.auth.isAuth,\r\n\tauthUserId: state.auth.userId,\r\n\texistingPosts: state.profilePage.existingPosts,\r\n});\r\n\r\n// Actions for dispatchs\r\nconst mapDispatchToProps = {\r\n\tupdateUserStatus,\r\n\tgetAuthUserData,\r\n\taddPost,\r\n\tgetProfile,\r\n};\r\n\r\nexport default compose(\r\n\tReact.memo,\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithRouter\r\n)(ProfileContainer);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3cqaC\",\"topImage\":\"Profile_topImage__1QeV6\",\"contentBlockWrapper\":\"Profile_contentBlockWrapper__1FqB6\",\"contentBlock\":\"Profile_contentBlock__65spg\",\"pageWrap\":\"Profile_pageWrap__3msTY\",\"avatar\":\"Profile_avatar__2HO6t\",\"pageInfoWrap\":\"Profile_pageInfoWrap__1UdYi\",\"pageName\":\"Profile_pageName__13q-Z\",\"status\":\"Profile_status__1rx6s\",\"myStatus\":\"Profile_myStatus__mCoRb\",\"enterStatus\":\"Profile_enterStatus__1MqOo\",\"pageInfo\":\"Profile_pageInfo__3tZPq\",\"leftBlock\":\"Profile_leftBlock__22m0d\",\"pageInfoRow\":\"Profile_pageInfoRow__JDm_r\",\"rightBlock\":\"Profile_rightBlock__13643\",\"contactsTitle\":\"Profile_contactsTitle__3FTfj\",\"contactsItem\":\"Profile_contactsItem__30pyP\",\"postsBlock\":\"Profile_postsBlock__zeNoh\",\"newPostBlock\":\"Profile_newPostBlock__giv8A\",\"buttonWrap\":\"Profile_buttonWrap__1RmpI\",\"existingPostsBlock\":\"Profile_existingPostsBlock__2kvb8\",\"post\":\"Profile_post__2MTw2\",\"likes\":\"Profile_likes__2O56D\"};","const required = (message) => (value) => (value ? undefined : message);\r\n\r\nconst maxLength = (max) => (value) =>\r\n\tvalue && value.length > max ? `Max length is ${max} symbols` : undefined;\r\n\r\nconst minLength = (min) => (value) =>\r\n\tvalue && value.length < min ? `Min length is ${min} symbols` : undefined;\r\n\r\nconst composeValidators = (...validators) => (value) =>\r\n\tvalidators.reduce((error, validator) => error || validator(value), undefined);\r\n\r\nexport const fullValidation = (min, max, mess) =>\r\n\tcomposeValidators(minLength(min), maxLength(max), required(mess));\r\n","import React from 'react';\r\n\r\n// Компонент возвращающий поле для ввода, применяется в Field\r\n// Принимает данные ввода и мета-данные (ошибки и тд.)\r\nconst FormControl = ({ input, meta, ...props }) => {\r\n\t// Принимает в пропсах нужное поле ввода (input, textarea...)\r\n\tconst Element = props.element;\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* Создание поля ввода и передача в него данных */}\r\n\t\t\t<Element {...input} placeholder={props.placeholder} />\r\n\t\t\t{/* Вывод на основании ошибок валидации */}\r\n\t\t\t{meta.error &&\r\n\t\t\t\t// Если есть ошибка и введено больше 5 символов, выводит ошибку\r\n\t\t\t\t(input.value.length > 5 ? (\r\n\t\t\t\t\t<span>{meta.error}</span>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t// Если есть ошибка, но символов меньше 5, выводит ошибку когда поле было затронуто\r\n\t\t\t\t\tmeta.touched && <span>{meta.error}</span>\r\n\t\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\n// Компоненты для создания конкретных полей ввода\r\nexport const Input = (props) => {\r\n\treturn <FormControl element=\"input\" {...props} />;\r\n};\r\nexport const Textarea = (props) => (\r\n\t<FormControl element=\"textarea\" {...props} />\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/les_tuman_derevia.712fe5c8.jpg\";"],"sourceRoot":""}