{"version":3,"sources":["assets/image/les_tuman_derevia.jpg","components/Main/Profile/PageInfoForm.module.scss","components/common/Errors/Error.module.scss","components/Main/Profile/ProfileStatus.js","components/Main/Profile/PageInfoWrap.js","components/Main/Profile/NewPostBlock.js","components/Main/Profile/ExistingPostsBlock.js","components/Main/Profile/PageInfoForm.js","components/Main/Profile/Profile.js","components/common/Errors/Error.js","components/Main/Profile/ProfileContainer.js","components/common/FormControls/FormControls.js","components/Main/Profile/Profile.module.scss","components/common/FormControls/FormControls.module.scss"],"names":["module","exports","React","memo","status","updateUserStatus","isMyProfile","useState","editMode","setEditMode","className","styles","initialValues","onSubmit","form","handleSubmit","onBlur","autoFocus","component","name","maxLength","onClick","undefined","title","myStatus","enterStatus","Contacts","items","contacts","itemExist","Object","entries","map","contact","key","contactsItem","contactsBlock","contactsTitle","AboutMe","aboutMe","lookingForAJob","lookingForAJobDescription","aboutMeBlock","pageInfoRow","PersonalInfoWrap","setPageEditMode","personalInfoWrap","topBorder","editModeButton","type","personalInfo","PageInfoWrap","defaultAvatar","changeMyPhoto","profile","photos","fullName","pageWrap","avatar","src","large","alt","onChange","e","target","files","length","pageInfoWrap","pageName","NewPostValidatioSchema","yup","shape","newPostInput","required","max","props","validationSchema","values","actions","addPost","resetForm","errors","touched","newPostBlock","as","Input","placeholder","error","buttonWrap","existingPostsBlock","posts","el","id","post","textPost","likes","amountLikes","reverse","ErrorOutput","errorIndex","setErrorIndex","blinkError","setBlinkError","useEffect","mainTimeout","blinkTumeout","any","setTimeout","clearTimeout","errorsWrap","cn","PageInfoForm","changeUserData","a","setErrors","pageInfoFormWrap","inputItem","nameItem","textField","Textarea","htmlFor","checkboxField","value","buttons","saveButton","cancelButton","topImage","existingPosts","isAuth","userId","pageEditMode","contentBlockWrapper","contentBlock","postsBlock","SomeError","mapDispatchToProps","getAuthUserData","getProfile","setUserProfile","setErrorDownloadProfile","compose","connect","state","profilePage","auth","authUserId","errorDownloadProfile","isFetchingProfile","withRouter","match","params","userIdInAddressBar","setIsMyProfile","Preloader","to","FormControl","serverError","Element","element","errorStyle","setErrorStyle","errorStyleTimeout","console","log","defaultElement"],"mappings":"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","file":"static/js/4.911bdd01.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/les_tuman_derevia.712fe5c8.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageInfoFormWrap\":\"PageInfoForm_pageInfoFormWrap__11WbP\",\"inputItem\":\"PageInfoForm_inputItem__3cHDp\",\"nameItem\":\"PageInfoForm_nameItem__3qxnx\",\"checkboxField\":\"PageInfoForm_checkboxField__3H4-7\",\"textField\":\"PageInfoForm_textField__Z8AlQ\",\"contactsTitle\":\"PageInfoForm_contactsTitle__30fsG\",\"buttons\":\"PageInfoForm_buttons__2dQIq\",\"errorsWrap\":\"PageInfoForm_errorsWrap__2s1Bt\",\"errors\":\"PageInfoForm_errors__3iYhj\",\"blinkError\":\"PageInfoForm_blinkError__3TXjz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Error_error__2sZ_4\"};","import React, { useState } from 'react';\r\nimport styles from './Profile.module.scss';\r\nimport { Formik, Field } from 'formik';\r\n\r\nconst ProfileStatus = ({ status, updateUserStatus, isMyProfile }) => {\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true);\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{editMode ? (\r\n\t\t\t\t<div className={styles.status}>\r\n\t\t\t\t\t<Formik\r\n\t\t\t\t\t\tinitialValues={{\r\n\t\t\t\t\t\t\tstatus: status,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonSubmit={({ status }, form) => {\r\n\t\t\t\t\t\t\t\tupdateUserStatus(status);\r\n\t\t\t\t\t\t\tsetEditMode(false);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{({ handleSubmit }) => (\r\n\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\tonBlur={handleSubmit}\r\n\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\tcomponent='input'\r\n\t\t\t\t\t\t\t\t\tname='status'\r\n\t\t\t\t\t\t\t\t\tmaxLength='300'\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Formik>\r\n\t\t\t\t</div>\r\n\t\t\t) : status || isMyProfile ? (\r\n\t\t\t\t<div className={styles.status}>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tonClick={isMyProfile ? activateEditMode : undefined}\r\n\t\t\t\t\t\ttitle={isMyProfile ? 'Click to change your status' : ''}\r\n\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\tisMyProfile ? (status ? styles.myStatus : styles.enterStatus) : ''\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{status || 'Enter your status...'}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t) : undefined}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default React.memo(ProfileStatus);\r\n","import React from 'react';\r\nimport styles from './Profile.module.scss';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\nconst Contacts = ({ contacts }) => {\r\n\tlet itemExist = false;\r\n\tlet items;\r\n\tif (contacts) {\r\n\t\titems = Object.entries(contacts).map((contact) => {\r\n\t\t\tif (contact[1]) {\r\n\t\t\t\titemExist = true;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={contact[0]} className={styles.contactsItem}>\r\n\t\t\t\t\t\t<span>{`${contact[0]}: `}</span>\r\n\t\t\t\t\t\t{contact[1]}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\treturn itemExist ? (\r\n\t\t<div className={styles.contactsBlock}>\r\n\t\t\t<div className={styles.contactsTitle}>Contacts:</div>\r\n\t\t\t{items}\r\n\t\t</div>\r\n\t) : (\r\n\t\t''\r\n\t);\r\n};\r\n\r\nconst AboutMe = ({ aboutMe, lookingForAJob, lookingForAJobDescription }) => {\r\n\treturn (\r\n\t\t<div className={styles.aboutMeBlock}>\r\n\t\t\t{/* About me */}\r\n\t\t\t{aboutMe ? (\r\n\t\t\t\t<div className={styles.pageInfoRow}>\r\n\t\t\t\t\t<span>About me:</span>\r\n\t\t\t\t\t{aboutMe}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\r\n\t\t\t{/* Looking for a job */}\r\n\t\t\t<div className={styles.pageInfoRow}>\r\n\t\t\t\t<span>Looking for a job: </span>\r\n\t\t\t\t{lookingForAJob ? 'Yes' : 'No'}\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Looking for a job description */}\r\n\t\t\t{lookingForAJobDescription ? (\r\n\t\t\t\t<div className={styles.pageInfoRow}>{lookingForAJobDescription}</div>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst PersonalInfoWrap = ({\r\n\tisMyProfile,\r\n\tsetPageEditMode,\r\n\taboutMe,\r\n\tlookingForAJob,\r\n\tlookingForAJobDescription,\r\n\tcontacts,\r\n}) => {\r\n\treturn (\r\n\t\t<div className={styles.personalInfoWrap}>\r\n\t\t\t<div className={styles.topBorder}>\r\n\t\t\t\tPersonal information\r\n\t\t\t\t{/* Edit mode button */}\r\n\t\t\t\t{isMyProfile && (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => setPageEditMode(true)}\r\n\t\t\t\t\t\tclassName={styles.editModeButton}\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tEdit\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={styles.personalInfo}>\r\n\t\t\t\t<AboutMe\r\n\t\t\t\t\taboutMe={aboutMe}\r\n\t\t\t\t\tlookingForAJob={lookingForAJob}\r\n\t\t\t\t\tlookingForAJobDescription={lookingForAJobDescription}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Contacts contacts={contacts} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// Общий блок информации о пользователе\r\nconst PageInfoWrap = ({\r\n\tdefaultAvatar,\r\n\tisMyProfile,\r\n\tstatus,\r\n\tupdateUserStatus,\r\n\tchangeMyPhoto,\r\n\tsetPageEditMode,\r\n\tprofile: {\r\n\t\tcontacts,\r\n\t\tphotos,\r\n\t\tfullName,\r\n\t\taboutMe,\r\n\t\tlookingForAJob,\r\n\t\tlookingForAJobDescription,\r\n\t},\r\n}) => {\r\n\t// Функция для отправки фото профиля на сервер\r\n\tconst onMyPhotoSelected = (e) => {\r\n\t\tif (e.target.files.length) {\r\n\t\t\tchangeMyPhoto(e.target.files[0]);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={styles.pageWrap}>\r\n\t\t\t{/* User photo */}\r\n\t\t\t<div className={styles.avatar}>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={photos ? photos.large || defaultAvatar : defaultAvatar}\r\n\t\t\t\t\talt='avatar'\r\n\t\t\t\t/>\r\n\t\t\t\t{isMyProfile && <input type='file' onChange={onMyPhotoSelected} />}\r\n\t\t\t</div>\r\n\t\t\t{/* Page info */}\r\n\t\t\t<div className={styles.pageInfoWrap}>\r\n\t\t\t\t{/* User name */}\r\n\t\t\t\t<div className={styles.pageName}>{fullName}</div>\r\n\r\n\t\t\t\t{/* User status */}\r\n\t\t\t\t<ProfileStatus\r\n\t\t\t\t\tisMyProfile={isMyProfile}\r\n\t\t\t\t\tstatus={status}\r\n\t\t\t\t\tupdateUserStatus={updateUserStatus}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* User info */}\r\n\t\t\t\t<PersonalInfoWrap\r\n\t\t\t\t\tisMyProfile={isMyProfile}\r\n\t\t\t\t\tsetPageEditMode={setPageEditMode}\r\n\t\t\t\t\taboutMe={aboutMe}\r\n\t\t\t\t\tlookingForAJob={lookingForAJob}\r\n\t\t\t\t\tlookingForAJobDescription={lookingForAJobDescription}\r\n\t\t\t\t\tcontacts={contacts}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PageInfoWrap;\r\n","import React from 'react';\r\nimport styles from './Profile.module.scss';\r\nimport { Input } from '../../common/FormControls/FormControls';\r\nimport { Formik, Field } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst NewPostValidatioSchema = yup.object().shape({\r\n\tnewPostInput: yup.string().required().max(30),\r\n});\r\n\r\nconst NewPostBlock = (props) => (\r\n\t<Formik\r\n\t\tinitialValues={{\r\n\t\t\tnewPostInput: '',\r\n\t\t}}\r\n\t\tvalidationSchema={NewPostValidatioSchema}\r\n\t\tonSubmit={(values, actions) => {\r\n\t\t\tprops.addPost(values.newPostInput);\r\n\t\t\tactions.resetForm()\r\n\t\t}}\r\n\t>\r\n\t\t{({ handleSubmit, errors, touched }) => (\r\n\t\t\t<form className={styles.newPostBlock} onSubmit={handleSubmit}>\r\n\t\t\t\t<Field\r\n\t\t\t\t\tname='newPostInput'\r\n\t\t\t\t\tas={Input}\r\n\t\t\t\t\tplaceholder={`What's up?`}\r\n\t\t\t\t\terror={errors.newPostInput}\r\n\t\t\t\t\ttouched={touched.newPostInput}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className={styles.buttonWrap}>\r\n\t\t\t\t\t<button type='submit'>Add post</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t)}\r\n\t</Formik>\r\n);\r\n\r\nexport default React.memo(NewPostBlock);\r\n","import React from 'react';\r\nimport styles from './Profile.module.scss';\r\n\r\nconst ExistingPostsBlock = (props) => (\r\n\t<div className={styles.existingPostsBlock}>\r\n\t\t{props.posts.map((el) => (\r\n\t\t\t<div key={el.id} className={styles.post}>\r\n\t\t\t\t<div>{el.textPost}</div>\r\n\t\t\t\t<div className={styles.likes}>{el.amountLikes} likes</div>\r\n\t\t\t</div>\r\n\t\t)).reverse()}\r\n\t</div>\r\n);\r\n\r\nexport default React.memo(ExistingPostsBlock);\r\n","import React, { useState, useEffect } from 'react';\r\nimport styles from './PageInfoForm.module.scss';\r\nimport { Textarea, Input } from '../../common/FormControls/FormControls';\r\nimport { Formik, Field } from 'formik';\r\nimport cn from 'classnames';\r\n\r\nconst ErrorOutput = ({ errors }) => {\r\n\tconst [errorIndex, setErrorIndex] = useState(0);\r\n\tconst [blinkError, setBlinkError] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet mainTimeout;\r\n\t\tlet blinkTumeout;\r\n\t\tif (errors && errors.any && errors.any.length > 1) {\r\n\t\t\tmainTimeout = setTimeout(() => {\r\n\t\t\t\tif (errors && errors.any && errorIndex < errors.any.length - 1) {\r\n\t\t\t\t\tsetErrorIndex(errorIndex + 1);\r\n\t\t\t\t\tsetBlinkError(true);\r\n\t\t\t\t\tblinkTumeout = setTimeout(() => {\r\n\t\t\t\t\t\tsetBlinkError(false);\r\n\t\t\t\t\t}, 500);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetErrorIndex(0);\r\n\t\t\t\t\tsetBlinkError(true);\r\n\t\t\t\t\tblinkTumeout = setTimeout(() => {\r\n\t\t\t\t\t\tsetBlinkError(false);\r\n\t\t\t\t\t}, 500);\r\n\t\t\t\t}\r\n\t\t\t}, 2000);\r\n\t\t}\r\n\t\treturn () => {\r\n\t\t\tclearTimeout(mainTimeout);\r\n\t\t\tclearTimeout(blinkTumeout);\r\n\t\t};\r\n\t}, [errors, errorIndex]);\r\n\treturn (\r\n\t\t<div className={styles.errorsWrap}>\r\n\t\t\t{errors.any ? (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={cn(styles.errors, {\r\n\t\t\t\t\t\t[styles.blinkError]: blinkError,\r\n\t\t\t\t\t})}\r\n\t\t\t\t>\r\n\t\t\t\t\t{errors.any[errorIndex]}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t''\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst PageInfoForm = ({\r\n\tsetPageEditMode,\r\n\tprofile: {\r\n\t\tcontacts,\r\n\t\tfullName,\r\n\t\taboutMe,\r\n\t\tlookingForAJob,\r\n\t\tlookingForAJobDescription,\r\n\t},\r\n\tchangeUserData,\r\n}) => {\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{\r\n\t\t\t\tcontacts,\r\n\t\t\t\tfullName,\r\n\t\t\t\taboutMe,\r\n\t\t\t\tlookingForAJob,\r\n\t\t\t\tlookingForAJobDescription,\r\n\t\t\t}}\r\n\t\t\tonSubmit={async (values, actions) => {\r\n\t\t\t\tconst error = await changeUserData(values);\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tactions.setErrors(error);\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{({ handleSubmit, errors, touched, values }) => (\r\n\t\t\t\t<div className={styles.pageInfoFormWrap}>\r\n\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t<fieldset>\r\n\t\t\t\t\t\t\t<legend>Personal info</legend>\r\n\t\t\t\t\t\t\t<div className={cn(styles.fullName, styles.inputItem)}>\r\n\t\t\t\t\t\t\t\t<div className={styles.nameItem}>Your name: </div>\r\n\t\t\t\t\t\t\t\t<div className={styles.textField}>\r\n\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\tas={Input}\r\n\t\t\t\t\t\t\t\t\t\tname='fullName'\r\n\t\t\t\t\t\t\t\t\t\tplaceholder='Your name'\r\n\t\t\t\t\t\t\t\t\t\terror={errors.fullName}\r\n\t\t\t\t\t\t\t\t\t\ttouched={touched.fullName}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className={styles.aboutMeBlock}>\r\n\t\t\t\t\t\t\t\t<div className={styles.inputItem}>\r\n\t\t\t\t\t\t\t\t\t<div className={styles.nameItem}>About me: </div>\r\n\t\t\t\t\t\t\t\t\t<div className={styles.textField}>\r\n\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\tas={Textarea}\r\n\t\t\t\t\t\t\t\t\t\t\tname='aboutMe'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='About me'\r\n\t\t\t\t\t\t\t\t\t\t\terror={errors.aboutMe}\r\n\t\t\t\t\t\t\t\t\t\t\ttouched={touched.aboutMe}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className={styles.inputItem}>\r\n\t\t\t\t\t\t\t\t\t<label className={styles.nameItem} htmlFor='lookingForAJob'>\r\n\t\t\t\t\t\t\t\t\t\tLooking for a job:{' '}\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t<div className={styles.checkboxField}>\r\n\t\t\t\t\t\t\t\t\t\t<Field type='checkbox' name='lookingForAJob' />\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t<div className={styles.inputItem}>\r\n\t\t\t\t\t\t\t\t\t<div className={styles.nameItem}>Your skills: </div>\r\n\t\t\t\t\t\t\t\t\t<div className={styles.textField}>\r\n\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\tas={Textarea}\r\n\t\t\t\t\t\t\t\t\t\t\tname='lookingForAJobDescription'\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder='Description'\r\n\t\t\t\t\t\t\t\t\t\t\terror={errors.lookingForAJobDescription}\r\n\t\t\t\t\t\t\t\t\t\t\ttouched={touched.lookingForAJobDescription}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div className={styles.contactsBlock}>\r\n\t\t\t\t\t\t\t\t<div className={styles.contactsTitle}>Contacts:</div>\r\n\t\t\t\t\t\t\t\t{Object.entries(contacts).map((contact) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\t\tkey={contact[0]}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={cn(styles.contactsItem, styles.inputItem)}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={styles.nameItem}>{`${contact[0]}: `}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className={styles.textField}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tas={Input}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={`contacts.${contact[0]}`}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={values.contacts[contact[0]] || ''}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\terror={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.contacts &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\terrors.contacts[contact[0]]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttouched={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttouched &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttouched.contacts &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttouched.contacts[contact[0]]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t{/* Кнопки */}\r\n\t\t\t\t\t\t\t<div className={styles.buttons}>\r\n\t\t\t\t\t\t\t\t<button type='submit' className={styles.saveButton}>\r\n\t\t\t\t\t\t\t\t\tSave\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={() => setPageEditMode(false)}\r\n\t\t\t\t\t\t\t\t\tclassName={styles.cancelButton}\r\n\t\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</fieldset>\r\n\r\n\t\t\t\t\t\t<ErrorOutput errors={errors} />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default PageInfoForm;\r\n","import React, { useState } from 'react';\r\nimport styles from './Profile.module.scss';\r\nimport PageInfoWrap from './PageInfoWrap';\r\nimport NewPostBlock from './NewPostBlock';\r\nimport ExistingPostsBlock from './ExistingPostsBlock';\r\nimport PageInfoForm from './PageInfoForm';\r\n\r\nconst Profile = ({\r\n\ttopImage,\r\n\tisMyProfile,\r\n\tprofile,\r\n\tdefaultAvatar,\r\n\tstatus,\r\n\tupdateUserStatus,\r\n\taddPost,\r\n\texistingPosts,\r\n\tisAuth,\r\n\tchangeMyPhoto,\r\n\tuserId,\r\n\tchangeUserData,\r\n}) => {\r\n\t// Переключатель режима редактирования информации пользователя\r\n\tconst [pageEditMode, setPageEditMode] = useState(false);\r\n\r\n\treturn pageEditMode ? (\r\n\t\t<PageInfoForm\r\n\t\t\tsetPageEditMode={setPageEditMode}\r\n\t\t\tprofile={profile}\r\n\t\t\tchangeUserData={changeUserData}\r\n\t\t/>\r\n\t) : (\r\n\t\t<div className={styles.profile}>\r\n\t\t\t<div className={styles.topImage}>\r\n\t\t\t\t<img src={topImage} alt='cover' />\r\n\t\t\t</div>\r\n\t\t\t<div className={styles.contentBlockWrapper}>\r\n\t\t\t\t<div className={styles.contentBlock}>\r\n\t\t\t\t\t<PageInfoWrap\r\n\t\t\t\t\t\tisMyProfile={isMyProfile}\r\n\t\t\t\t\t\tprofile={profile}\r\n\t\t\t\t\t\tdefaultAvatar={defaultAvatar}\r\n\t\t\t\t\t\tstatus={status}\r\n\t\t\t\t\t\tupdateUserStatus={updateUserStatus}\r\n\t\t\t\t\t\tchangeMyPhoto={changeMyPhoto}\r\n\t\t\t\t\t\tuserId={userId}\r\n\t\t\t\t\t\tsetPageEditMode={setPageEditMode}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className={styles.postsBlock}>\r\n\t\t\t\t\t\t{isAuth ? <NewPostBlock addPost={addPost} /> : ''}\r\n\t\t\t\t\t\t<ExistingPostsBlock posts={existingPosts} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default React.memo(Profile);\r\n","import React from 'react';\nimport styles from './Error.module.scss';\n\nconst SomeError = () => (\n\t<div className={styles.error}>\n\t\tOops! Something went wrong...\n\t</div>\n);\nexport default SomeError;\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport defaultAvatar from '../../../assets/image/defaultAvatar.jpg';\r\nimport topImage from '../../../assets/image/les_tuman_derevia.jpg';\r\nimport { getAuthUserData } from '../../../redux/reducers/authReducer';\r\nimport {\r\n\taddPost,\r\n\tgetProfile,\r\n\tupdateUserStatus,\r\n\tchangeMyPhoto,\r\n\tchangeUserData,\r\n\tsetUserProfile,\r\n\tsetErrorDownloadProfile,\r\n} from '../../../redux/reducers/profileReducer';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport Profile from './Profile';\r\nimport SomeError from '../../common/Errors/Error';\r\n\r\nconst ProfileContainer = (props) => {\r\n\tconst {\r\n\t\tmatch: {\r\n\t\t\tparams: { userId },\r\n\t\t},\r\n\t\tauthUserId,\r\n\t\tgetProfile,\r\n\t\tisAuth,\r\n\t\tprofile,\r\n\t\terrorDownloadProfile,\r\n\t\tsetErrorDownloadProfile,\r\n\t\tsetUserProfile,\r\n\t} = props\r\n\r\n\t// Id текущей страницы пользователя из адресной строки\r\n\tconst userIdInAddressBar = +userId;\r\n\r\n\t// Индикатор профиля авторизованного пользователя\r\n\tconst [isMyProfile, setIsMyProfile] = useState(false);\r\n\r\n\t// Выполняется при первом рендере и после каждого изменения id в адресной строке\r\n\tuseEffect(() => {\r\n\t\t// Если в адресной строке есть id\r\n\t\tif (userIdInAddressBar) {\r\n\t\t\t// Если id авторизованного пользователя и id в адресной строке совпадает\r\n\t\t\t// Указывает, что это профиль пользователя\r\n\t\t\tif (authUserId === userIdInAddressBar) {\r\n\t\t\t\tsetIsMyProfile(true);\r\n\t\t\t}\r\n\t\t\t// Запрос данных пользователя\r\n\t\t\tgetProfile(userIdInAddressBar);\r\n\t\t\treturn () => {\r\n\t\t\t\tsetErrorDownloadProfile(false);\r\n\t\t\t\tsetUserProfile(null);\r\n\t\t\t};\r\n\t\t}\r\n\t}, [\r\n\t\tuserIdInAddressBar,\r\n\t\tauthUserId,\r\n\t\tgetProfile,\r\n\t\tsetUserProfile,\r\n\t\tsetErrorDownloadProfile,\r\n\t]);\r\n\r\n\t// Если пользователь выполнил выход\r\n\tuseEffect(() => {\r\n\t\tif (!isAuth) {\r\n\t\t\tsetIsMyProfile(false);\r\n\t\t}\r\n\t}, [isAuth]);\r\n\r\n\t// Если в адресной строке указан id\r\n\tif (userIdInAddressBar) {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{errorDownloadProfile && <SomeError />}\r\n\t\t\t\t{profile ? (\r\n\t\t\t\t\t<Profile {...props} isMyProfile={isMyProfile} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t// Если идет получение данных\r\n\t\t\t\t\t<Preloader />\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t} else {\r\n\t\t// Если в адресной строке не указан id\r\n\t\treturn isAuth ? (\r\n\t\t\t// Редирект на профиль авторизованного пользователя\r\n\t\t\t<Redirect to={`/profile/${authUserId}`} />\r\n\t\t) : (\r\n\t\t\t// Если не авторизован, редирект на страницу логинизации\r\n\t\t\t<Redirect to='/login' />\r\n\t\t);\r\n\t}\r\n};\r\n\r\n// Данные из state передаваемые в props компонента\r\nconst mapStateToProps = (state) => ({\r\n\ttopImage,\r\n\tdefaultAvatar,\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tisAuth: state.auth.isAuth,\r\n\tauthUserId: state.auth.userId,\r\n\texistingPosts: state.profilePage.existingPosts,\r\n\terrorDownloadProfile: state.profilePage.errorDownloadProfile,\r\n\tisFetchingProfile: state.profilePage.isFetchingProfile,\r\n});\r\n\r\n// Actions for dispatchs\r\nconst mapDispatchToProps = {\r\n\tupdateUserStatus,\r\n\tgetAuthUserData,\r\n\taddPost,\r\n\tgetProfile,\r\n\tchangeMyPhoto,\r\n\tchangeUserData,\r\n\tsetUserProfile,\r\n\tsetErrorDownloadProfile,\r\n};\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithRouter,\r\n\tReact.memo\r\n)(ProfileContainer);\r\n","import React, { useEffect, useState } from 'react';\r\nimport styles from './FormControls.module.scss';\r\nimport cn from 'classnames';\r\n\r\n// Компонент возвращающий поле для ввода, применяется в Field\r\n// Принимает данные ввода и мета-данные (ошибки и тд.)\r\nconst FormControl = ({ error, touched, serverError, ...props }) => {\r\n\t// Принимает в пропсах нужное поле ввода (input, textarea...)\r\n\tconst Element = props.element;\r\n\r\n\tconst [errorStyle, setErrorStyle] = useState(false);\r\n\tuseEffect(() => {\r\n\t\tlet errorStyleTimeout;\r\n\t\tif (error && touched) {\r\n\t\t\tsetErrorStyle(true);\r\n\t\t\terrorStyleTimeout = setTimeout(() => {\r\n\t\t\t\tsetErrorStyle(false);\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\t\treturn () => clearTimeout(errorStyleTimeout);\r\n\t}, [error, touched]);\r\n\r\n\tuseEffect(() => {\r\n\t\tlet errorStyleTimeout;\r\n\t\tif (serverError) {\r\n\t\t\tsetErrorStyle(true);\r\n\t\t\terrorStyleTimeout = setTimeout(() => {\r\n\t\t\t\tconsole.log('oh');\r\n\t\t\t\tsetErrorStyle(false);\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\t\treturn () => clearTimeout(errorStyleTimeout);\r\n\t}, [serverError]);\r\n\r\n\treturn (\r\n\t\t<Element\r\n\t\t\t{...props}\r\n\t\t\tclassName={cn([styles.defaultElement], {\r\n\t\t\t\t[styles.error]: errorStyle,\r\n\t\t\t})}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\n// Компоненты для создания конкретных полей ввода\r\nexport const Input = (props) => {\r\n\treturn <FormControl element='input' {...props} />;\r\n};\r\nexport const Textarea = (props) => (\r\n\t<FormControl element='textarea' {...props} />\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3cqaC\",\"topImage\":\"Profile_topImage__1QeV6\",\"contentBlockWrapper\":\"Profile_contentBlockWrapper__1FqB6\",\"contentBlock\":\"Profile_contentBlock__65spg\",\"pageWrap\":\"Profile_pageWrap__3msTY\",\"avatar\":\"Profile_avatar__2HO6t\",\"pageInfoWrap\":\"Profile_pageInfoWrap__1UdYi\",\"pageName\":\"Profile_pageName__13q-Z\",\"status\":\"Profile_status__1rx6s\",\"myStatus\":\"Profile_myStatus__mCoRb\",\"enterStatus\":\"Profile_enterStatus__1MqOo\",\"personalInfoWrap\":\"Profile_personalInfoWrap__2PMRp\",\"topBorder\":\"Profile_topBorder__1s0dm\",\"editModeButton\":\"Profile_editModeButton__P3IND\",\"personalInfo\":\"Profile_personalInfo__1EwfG\",\"aboutMeBlock\":\"Profile_aboutMeBlock__1vcdq\",\"pageInfoRow\":\"Profile_pageInfoRow__JDm_r\",\"contactsBlock\":\"Profile_contactsBlock__1OIs0\",\"contactsTitle\":\"Profile_contactsTitle__3FTfj\",\"contactsItem\":\"Profile_contactsItem__30pyP\",\"postsBlock\":\"Profile_postsBlock__zeNoh\",\"newPostBlock\":\"Profile_newPostBlock__giv8A\",\"buttonWrap\":\"Profile_buttonWrap__1RmpI\",\"existingPostsBlock\":\"Profile_existingPostsBlock__2kvb8\",\"post\":\"Profile_post__2MTw2\",\"likes\":\"Profile_likes__2O56D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultElement\":\"FormControls_defaultElement__3jSSc\",\"error\":\"FormControls_error___hLaz\"};"],"sourceRoot":""}